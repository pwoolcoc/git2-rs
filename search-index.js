var searchIndex = {};
searchIndex['git2'] = {"items":[[0,"","git2","# libgit2 bindings for Rust"],[1,"Blob","","A structure to represent a git [blob][1]"],[1,"Branch","","A structure to represent a git [branch][1]"],[1,"Branches","","An iterator over the branches inside of a repository."],[1,"Buf","","A structure to wrap an intermediate buffer used by libgit2."],[1,"Commit","","A structure to represent a git [commit][1]"],[1,"Parents","","An iterator over the parent commits of a commit."],[1,"Config","","A structure representing a git configuration key/value store"],[1,"ConfigEntry","","A struct representing a certain entry owned by a `Config` instance."],[1,"ConfigEntries","","An iterator over the `ConfigEntry` values of a `Config` structure."],[1,"Cred","","A structure to represent git credentials in libgit2."],[1,"CredentialHelper","","Management of the gitcredentials(7) interface."],[11,"username","","A public field representing the currently discovered username from\nconfiguration.",0],[1,"Error","","A structure to represent errors coming out of libgit2."],[1,"Index","","A structure to represent a git [index][1]"],[1,"IndexEntry","","A structure to represent an entry or a file inside of an index."],[11,"ctime","","",1],[11,"mtime","","",1],[11,"dev","","",1],[11,"ino","","",1],[11,"mode","","",1],[11,"uid","","",1],[11,"gid","","",1],[11,"file_size","","",1],[11,"id","","",1],[11,"flags","","",1],[11,"flags_extended","","",1],[11,"path","","",1],[1,"IndexEntries","","An iterator over the entries in an index"],[1,"Object","","A structure to represent a git [object][1]"],[1,"Oid","","Unique identity of any object (commit, tree, blob, tag)."],[1,"Push","","A structure to represent a pending push operation to a remote."],[1,"Status","","A status representing the result of updating a remote reference."],[11,"reference","","The reference that was updated as part of a push.",2],[11,"message","","If `None`, the reference was updated successfully, otherwise a message\nexplaining why it could not be updated is provided.",2],[1,"Reference","","A structure to represent a git [reference][1]."],[1,"References","","An iterator over the references in a repository."],[1,"ReferenceNames","","An iterator over the names of references in a repository."],[1,"Refspec","","A structure to represent a git [refspec][1]."],[1,"Remote","","A structure representing a [remote][1] of a git repository."],[1,"Refspecs","","An iterator over the refspecs that a remote contains."],[1,"RemoteCallbacks","","A structure to contain the callbacks which are invoked when a repository is\nbeing updated or downloaded."],[1,"Progress","","Struct representing the progress by an in-flight transfer."],[11,"total_objects","","Number of objects in the packfile being downloaded",3],[11,"indexed_objects","","Received objects that have been hashed",3],[11,"received_objects","","Objects which have been downloaded",3],[11,"local_objects","","Locally-available objects that have been injected in order to fix a thin\npack.",3],[11,"total_deltas","","Number of deltas in the packfile being downloaded",3],[11,"indexed_deltas","","Received deltas that have been hashed.",3],[11,"received_bytes","","Size of the packfile received up to now",3],[1,"Repository","","An owned git repository, representing all state associated with the\nunderlying filesystem."],[1,"RepositoryInitOptions","","Options which can be used to configure how a repository is initialized"],[1,"Revspec","","A revspec represents a range of revisions within a repository."],[1,"Signature","","A Signature is used to indicate authorship of various actions throughout the\nlibrary."],[1,"StringArray","","A string array structure used by libgit2"],[1,"StringArrayItems","","A forward iterator over the strings of an array, casted to `&str`."],[1,"StringArrayBytes","","A forward iterator over the strings of an array, casted to `&[u8]`."],[1,"Submodule","","A structure to represent a git [submodule][1]"],[1,"Tag","","A structure to represent a git [tag][1]"],[1,"Tree","","A structure to represent a git [tree][1]"],[1,"TreeEntry","","A structure representing an entry inside of a tree. An entry is borrowed\nfrom a tree."],[1,"CredentialType","","\nTypes of credentials that can be requested by a credential callback.\n"],[1,"IndexAddOption","","\nFlags for APIs that add files matching pathspec\n"],[2,"ErrorCode","","An enumeration of possible errors that can happen when working with a git\nrepository."],[12,"GenericError","","Generic error",4],[12,"NotFound","","Requested object could not be found",4],[12,"Exists","","Object exists preventing operation",4],[12,"Ambiguous","","More than one object matches",4],[12,"BufSize","","Output buffer too short to hold data",4],[12,"User","","Operation not allowed on bare repository",4],[12,"BareRepo","","Operation not allowed on bare repository",4],[12,"UnbornBranch","","HEAD refers to branch with no commits",4],[12,"Unmerged","","Merge in progress prevented operation",4],[12,"NotFastForward","","Reference was not fast-forwardable",4],[12,"InvalidSpec","","Name/ref spec was not in a valid format",4],[12,"MergeConflict","","Merge conflicts prevented operation",4],[12,"Locked","","Lock file prevented operation",4],[12,"Modified","","Reference value does not match expected",4],[2,"RepositoryState","","A listing of the possible states that a repository can be in."],[12,"Clean","","",5],[12,"Merge","","",5],[12,"Revert","","",5],[12,"CherryPick","","",5],[12,"Bisect","","",5],[12,"Rebase","","",5],[12,"RebaseInteractive","","",5],[12,"RebaseMerge","","",5],[12,"ApplyMailbox","","",5],[12,"ApplyMailboxOrRebase","","",5],[2,"Direction","","An enumeration of the possible directions for a remote."],[12,"DirFetch","","Data will be fetched (read) from this remote.",6],[12,"DirPush","","Data will be pushed (written) to this remote.",6],[2,"ResetType","","An enumeration of the operations that can be performed for the `reset`\nmethod on a `Repository`."],[12,"Soft","","Move the head to the given commit.",7],[12,"Mixed","","Soft plus reset the index to the commit.",7],[12,"Hard","","Mixed plus changes in the working tree are discarded.",7],[2,"ObjectType","","An enumeration all possible kinds objects may have."],[12,"ObjectAny","","An object which corresponds to a any git object",8],[12,"ObjectCommit","","An object which corresponds to a git commit",8],[12,"ObjectTree","","An object which corresponds to a git tree",8],[12,"ObjectBlob","","An object which corresponds to a git blob",8],[12,"ObjectTag","","An object which corresponds to a git tag",8],[2,"BranchType","","An enumeration for the possible types of branches"],[12,"BranchLocal","","A local branch not on a remote.",9],[12,"BranchRemote","","A branch for a remote.",9],[2,"ConfigLevel","","An enumeration of the possible priority levels of a config file."],[12,"ConfigSystem","","System-wide configuration file, e.g. /etc/gitconfig",10],[12,"ConfigXDG","","XDG-compatible configuration file, e.g. ~/.config/git/config",10],[12,"ConfigGlobal","","User-specific configuration, e.g. ~/.gitconfig",10],[12,"ConfigLocal","","Reopsitory specific config, e.g. $PWD/.git/config",10],[12,"ConfigApp","","Application specific configuration file",10],[12,"ConfigHighest","","Highest level available",10],[0,"build","","Builder-pattern objects for configuration various git operations."],[1,"RepoBuilder","git2::build","A builder struct which is used to build configuration for cloning a new git\nrepository."],[1,"CheckoutBuilder","","A builder struct for configuring checkouts of a repository."],[10,"clone","","",11],[10,"new","","Creates a new repository builder with all of the default configuration.",12],[10,"bare","","Indicate whether the repository will be cloned as a bare repository or\nnot.",12],[10,"branch","","Specify the name of the branch to check out after the clone.",12],[10,"signature","","Specify the identity that will be used when updating the reflog.",12],[10,"local","","Set the flag for bypassing the git aware transport mechanism for local\npaths.",12],[10,"hardlinks","","Set the flag for whether hardlinks are used when using a local git-aware\ntransport mechanism.",12],[10,"with_checkout","","Configure the checkout which will be performed by consuming a checkout\nbuilder.",12],[10,"remote_callbacks","","Set the callbacks which will be used to monitor the download progress.",12],[10,"clone","","Clone a remote repository.",12],[10,"new","","Creates a new builder for checkouts with all of its default\nconfiguration.",11],[10,"dry_run","","Indicate that this checkout should perform a dry run by checking for\nconflicts but not make any actual changes.",11],[10,"force","","Take any action necessary to get the working directory to match the\ntarget including potentially discarding modified files.",11],[10,"safe","","Indicate that the checkout should be performed safely, allowing new\nfiles to be created but not overwriting extisting files or changes.",11],[10,"allow_conflicts","","In safe mode, apply safe file updates even when there are conflicts\ninstead of canceling the checkout.",11],[10,"remove_untracked","","Remove untracked files from the working dir.",11],[10,"remove_ignored","","Remove ignored files from the working dir.",11],[10,"update_only","","Only update the contents of files that already exist.",11],[10,"update_index","","Prevents checkout from writing the updated files' information to the\nindex.",11],[10,"refresh","","Indicate whether the index and git attributes should be refreshed from\ndisk before any operations.",11],[10,"skip_unmerged","","Skip files with unmerged index entries.",11],[10,"use_ours","","Indicate whether the checkout should proceed on conflicts by using the\nstage 2 version of the file (\"ours\").",11],[10,"use_theirs","","Indicate whether the checkout should proceed on conflicts by using the\nstage 3 version of the file (\"theirs\").",11],[10,"overwrite_ignored","","Indicate whether ignored files should be overwritten during the checkout.",11],[10,"conflict_style_merge","","Indicate whether a normal merge file should be written for conflicts.",11],[10,"conflict_style_diff3","","Indicates whether to include common ancestor data in diff3 format files\nfor conflicts.",11],[10,"disable_filters","","Indicate whether to apply filters like CRLF conversion.",11],[10,"dir_perm","","Set the mode with which new directories are created.",11],[10,"file_perm","","Set the mode with which new files are created.",11],[10,"path","","Add a path to be checked out.",11],[10,"target_dir","","Set the directory to check out to",11],[10,"ancestor_label","","The name of the common ancestor side of conflicts",11],[10,"our_label","","The name of the common our side of conflicts",11],[10,"their_label","","The name of the common their side of conflicts",11],[10,"configure","","Configure a raw checkout options based on this configuration.",11],[10,"from_raw","git2","Create a new object from its raw component.",13],[10,"id","","Get the id (SHA1) of a repository blob",13],[10,"raw","","Get access to the underlying raw pointer.",13],[10,"is_binary","","Determine if the blob content is most certainly binary or not.",13],[10,"content","","Get the content of this blob.",13],[10,"drop","","",13],[10,"wrap","","Creates a new branch from a reference",14],[10,"get","","Gain access to the reference that is this branch",14],[10,"unwrap","","Take ownership of the underlying reference.",14],[10,"delete","","Delete an existing branch reference.",14],[10,"is_head","","Determine if the current local branch is pointed at by HEAD.",14],[10,"rename","","Move/rename an existing local branch reference.",14],[10,"name","","Return the name of the given local or remote branch.",14],[10,"name_bytes","","Return the name of the given local or remote branch.",14],[10,"upstream","","Return the reference supporting the remote tracking branch, given a\nlocal branch reference.",14],[10,"set_upstream","","Set the upstream configuration for a given local branch.",14],[10,"from_raw","","Creates a new iterator from the raw pointer given.",15],[10,"next","","",15],[10,"drop","","",15],[10,"new","","Creates a new empty buffer.",16],[10,"from_raw","","Creates a buffer from its raw component.",16],[10,"as_str","","Attempt to view this buffer as a string slice.",16],[10,"get","","Gain access to the contents of this buffer as a byte slice",16],[10,"raw","","Gain access to the underlying raw buffer.",16],[10,"drop","","",16],[10,"from_raw","","Create a new object from its raw component.",17],[10,"id","","Get the id (SHA1) of a repository commit",17],[10,"tree_id","","Get the id of the tree pointed to by this commit.",17],[10,"raw","","Get access to the underlying raw pointer.",17],[10,"message","","Get the full message of a commit.",17],[10,"message_bytes","","Get the full message of a commit as a byte slice.",17],[10,"message_encoding","","Get the encoding for the message of a commit, as a string representing a\nstandard encoding name.",17],[10,"message_raw","","Get the full raw message of a commit.",17],[10,"message_raw_bytes","","Get the full raw message of a commit.",17],[10,"raw_header","","Get the full raw text of the commit header.",17],[10,"raw_header_bytes","","Get the full raw text of the commit header.",17],[10,"summary","","Get the short \"summary\" of the git commit message.",17],[10,"summary_bytes","","Get the short \"summary\" of the git commit message.",17],[10,"time","","Get the commit time (i.e. committer time) of a commit.",17],[10,"parents","","Creates a new iterator over the parents of this commit.",17],[10,"author","","Get the author of this commit.",17],[10,"committer","","Get the committer of this commit.",17],[10,"amend","","Amend this existing commit with all non-`None` values",17],[10,"next","","",18],[10,"drop","","",17],[10,"new","","Allocate a new configuration object",19],[10,"open","","Create a new config instance containing a single on-disk file",19],[10,"open_default","","Open the global, XDG and system configuration files",19],[10,"find_global","","Locate the path to the global configuration file",19],[10,"find_system","","Locate the path to the system configuration file",19],[10,"find_xdg","","Locate the path to the global xdg compatible configuration file",19],[10,"from_raw","","Consumes ownership of a raw config pointer, returning a wrapped object.",19],[10,"raw","","Gain access to the underlying raw pointer of this config",19],[10,"add_file","","Add an on-disk config file instance to an existing config",19],[10,"remove","","Delete a config variable from the config file with the highest level\n(usually the local one).",19],[10,"get_bool","","Get the value of a boolean config variable.",19],[10,"get_i32","","Get the value of an integer config variable.",19],[10,"get_i64","","Get the value of an integer config variable.",19],[10,"get_str","","Get the value of a string config variable.",19],[10,"get_bytes","","Get the value of a string config variable as a byte slice.",19],[10,"get_entry","","Get the ConfigEntry for a config variable.",19],[10,"entries","","Iterate over all the config variables",19],[10,"open_global","","Open the global/XDG configuration file according to git's rules",19],[10,"open_level","","Build a single-level focused config object from a multi-level one.",19],[10,"refresh","","Reload changed config files",19],[10,"set_bool","","Set the value of a boolean config variable in the config file with the\nhighest level (usually the local one).",19],[10,"set_i32","","Set the value of an integer config variable in the config file with the\nhighest level (usually the local one).",19],[10,"set_i64","","Set the value of an integer config variable in the config file with the\nhighest level (usually the local one).",19],[10,"set_str","","Set the value of a string config variable in the config file with the\nhighest level (usually the local one).",19],[10,"snapshot","","Create a snapshot of the configuration",19],[10,"drop","","",19],[10,"from_raw","","Creates a new config entry from the raw components.",20],[10,"name","","Gets the name of this entry.",20],[10,"name_bytes","","Gets the name of this entry as a byte slice.",20],[10,"value","","Gets the value of this entry.",20],[10,"value_bytes","","Gets the value of this entry as a byte slice.",20],[10,"level","","Gets the configuration level of this entry.",20],[10,"from_raw","","Creates a new iterator from its raw component.",21],[10,"drop","","",21],[10,"from_raw","","Create a new credential object from its raw component.",22],[10,"default","","Create a \"default\" credential usable for Negotiate mechanisms like NTLM\nor Kerberos authentication.",22],[10,"ssh_key_from_agent","","Create a new ssh key credential object used for querying an ssh-agent.",22],[10,"ssh_key","","Create a new passphrase-protected ssh key credential object.",22],[10,"userpass_plaintext","","Create a new plain-text username and password credential object.",22],[10,"credential_helper","","Attempt to read `credential.helper` according to gitcredentials(7) [1]",22],[10,"has_username","","Check whether a credential object contains username information.",22],[10,"raw","","Gain access to the underlying raw credential pointer.",22],[10,"credtype","","Return the type of credentials that this object represents.",22],[10,"unwrap","","Unwrap access to the underlying raw pointer, canceling the destructor",22],[10,"drop","","",22],[10,"new","","Create a new credential helper object which will be used to probe git's\nlocal credential configuration.",0],[10,"username","","Set the username that this credential helper will query with.",0],[10,"config","","Query the specified configuration object to discover commands to\nexecute, usernames to query, etc.",0],[10,"execute","","Execute this helper, attempting to discover a username/password pair.",0],[10,"last_error","","Returns the last error, or `None` if one is not available.",23],[10,"from_str","","Creates a new error from the given string as the error.",23],[10,"code","","Return the error code associated with this error.",23],[10,"raw_code","","Return the raw error code associated with this error.",23],[10,"message","","Return the message associated with this error",23],[10,"fmt","","",23],[10,"drop","","",23],[10,"new","","Creates a new in-memory index.",24],[10,"open","","Create a new bare Git index object as a memory representation of the Git\nindex file in 'index_path', without a repository to back it.",24],[10,"from_raw","","Creates a new index from a raw pointer.",24],[10,"add","","Add or update an index entry from an in-memory struct",24],[10,"add_path","","Add or update an index entry from a file on disk",24],[10,"add_all","","Add or update index entries matching files in the working directory.",24],[10,"raw","","Get access to the underlying raw index pointer.",24],[10,"clear","","Clear the contents (all the entries) of an index object.",24],[10,"len","","Get the count of entries currently in the index",24],[10,"get","","Get one of the entries in the index by its position.",24],[10,"iter","","Get an iterator over the entries in this index.",24],[10,"get_path","","Get one of the entries in the index by its path.",24],[10,"path","","Get the full path to the index file on disk.",24],[10,"read","","Update the contents of an existing index object in memory by reading\nfrom the hard disk.",24],[10,"read_tree","","Read a tree into the index file with stats",24],[10,"remove","","Remove an entry from the index",24],[10,"remove_path","","Remove an index entry corresponding to a file on disk.",24],[10,"remove_dir","","Remove all entries from the index under a given directory.",24],[10,"remove_all","","Remove all matching index entries.",24],[10,"update_all","","Update all index entries to match the working directory",24],[10,"write","","Write an existing index object from memory back to disk using an atomic\nfile lock.",24],[10,"write_tree","","Write the index as a tree.",24],[10,"write_tree_to","","Write the index as a tree to the given repository",24],[10,"drop","","",24],[10,"next","","",25],[10,"from_raw","","Creates a new entry from its raw pointer.",1],[10,"configure","","Configures a raw git entry from this entry",1],[10,"from_raw","","Create a new object from its raw component.",26],[10,"from_raw_ptr","","Even more unsafe than `from_raw`, the output lifetime is not attached to\nany input.",26],[10,"id","","Get the id (SHA1) of a repository object",26],[10,"raw","","Get access to the underlying raw pointer.",26],[10,"kind","","Get the object type of an object.",26],[10,"peel","","Recursively peel an object until an object of the specified type is met.",26],[10,"short_id","","Get a short abbreviated OID string for the object",26],[10,"clone","","",26],[10,"drop","","",26],[10,"from_raw","","Create a new Oid from a raw libgit2 oid structure.",27],[10,"from_str","","Parse a hex-formatted object id into an Oid structure.",27],[10,"from_bytes","","Parse a raw object id into an Oid structure.",27],[10,"raw","","Gain access to the underlying raw oid pointer",27],[10,"as_bytes","","View this OID as a byte-slice 20 bytes in length.",27],[10,"fmt","","Hex-encode this Oid into a formatter.",27],[10,"eq","","",27],[10,"partial_cmp","","",27],[10,"cmp","","",27],[10,"clone","","",27],[10,"hash","","",27],[10,"from_raw","","Create a new push from its raw component.",28],[10,"raw","","Get access to the underlying raw pointer.",28],[10,"add_refspec","","Add a refspec to be pushed",28],[10,"finish","","Actually push all given refspecs",28],[10,"unpack_ok","","Check if remote side successfully unpacked",28],[10,"update_tips","","Update remote tips after a push",28],[10,"statuses","","Return each status entry",28],[10,"drop","","",28],[10,"from_raw","","Creates a new reference from a raw pointer.",29],[10,"from_raw_ptr","","Even more unsafe than `from_raw`, the output lifetime is not attached to\nany input.",29],[10,"is_valid_name","","Ensure the reference name is well-formed.",29],[10,"raw","","Get access to the underlying raw pointer.",29],[10,"delete","","Delete an existing reference.",29],[10,"is_branch","","Check if a reference is a local branch.",29],[10,"is_note","","Check if a reference is a note.",29],[10,"is_remote","","Check if a reference is a remote tracking branch",29],[10,"is_tag","","Check if a reference is a tag",29],[10,"name","","Get the full name of a reference.",29],[10,"name_bytes","","Get the full name of a reference.",29],[10,"shorthand","","Get the full shorthand of a reference.",29],[10,"shorthand_bytes","","Get the full shorthand of a reference.",29],[10,"target","","Get the OID pointed to by a direct reference.",29],[10,"target_peel","","Return the peeled OID target of this reference.",29],[10,"symbolic_target","","Get full name to the reference pointed to by a symbolic reference.",29],[10,"symbolic_target_bytes","","Get full name to the reference pointed to by a symbolic reference.",29],[10,"resolve","","Resolve a symbolic reference to a direct reference.",29],[10,"rename","","Rename an existing reference.",29],[10,"partial_cmp","","",29],[10,"cmp","","",29],[10,"eq","","",29],[10,"drop","","",29],[10,"from_raw","","Creates a new iterator from its raw underlying pointer.",30],[10,"next","","",30],[10,"drop","","",30],[10,"new","","Consumes a `References` iterator to create an iterator over just the\nname of some references.",31],[10,"next","","",31],[10,"from_raw","","Creates a new refspec from the raw components.",32],[10,"direction","","Get the refspec's direction.",32],[10,"dst","","Get the destination specifier.",32],[10,"dst_bytes","","Get the destination specifier, in bytes.",32],[10,"dst_matches","","Check if a refspec's destination descriptor matches a reference",32],[10,"src","","Get the source specifier.",32],[10,"src_bytes","","Get the source specifier, in bytes.",32],[10,"src_matches","","Check if a refspec's source descriptor matches a reference",32],[10,"is_force","","Get the force update setting.",32],[10,"str","","Get the refspec's string.",32],[10,"bytes","","Get the refspec's string as a byte array",32],[10,"from_raw","","Creates a new remote from its raw pointer.",33],[10,"is_valid_name","","Ensure the remote name is well-formed.",33],[10,"is_valid_url","","Return whether a string is a valid remote URL",33],[10,"is_supported_url","","Return whether the passed URL is supported by this version of the\nlibrary.",33],[10,"name","","Get the remote's name.",33],[10,"name_bytes","","Get the remote's name, in bytes.",33],[10,"url","","Get the remote's url.",33],[10,"url_bytes","","Get the remote's url as a byte array.",33],[10,"pushurl","","Get the remote's pushurl.",33],[10,"pushurl_bytes","","Get the remote's pushurl as a byte array.",33],[10,"connect","","Open a connection to a remote.",33],[10,"connected","","Check whether the remote is connected",33],[10,"disconnect","","Disconnect from the remote",33],[10,"save","","Save a remote to its repository's configuration",33],[10,"add_fetch","","Add a fetch refspec to the remote",33],[10,"add_push","","Add a push refspec to the remote",33],[10,"set_check_cert","","Choose whether to check the server's certificate (applies to HTTPS only)",33],[10,"set_url","","Set the remote's url",33],[10,"set_pushurl","","Set the remote's pushurl.",33],[10,"set_update_fetchhead","","Sets the update FETCH_HEAD setting. By default, FETCH_HEAD will be\nupdated on every fetch.",33],[10,"set_fetch_refspecs","","Set the remote's list of fetch refspecs",33],[10,"set_push_refspecs","","Set the remote's list of push refspecs",33],[10,"clear_refspecs","","Clear the refspecs",33],[10,"delete","","Delete an existing persisted remote.",33],[10,"download","","Download and index the packfile",33],[10,"refspecs","","Get the number of refspecs for a remote",33],[10,"rename","","Give the remote a new name",33],[10,"fetch","","Download new data and update tips",33],[10,"update_tips","","Update the tips to the new state",33],[10,"update_fetchhead","","Retrieve the update FETCH_HEAD setting.",33],[10,"push","","Create a new push object",33],[10,"set_callbacks","","Set the callbacks to be invoked when the transfer is in-progress.",33],[10,"next","","",34],[10,"clone","","",33],[10,"drop","","",33],[10,"new","","Creates a new set of empty callbacks",35],[10,"credentials","","The callback through which to fetch credentials if required.",35],[10,"transfer_progress","","The callback through which progress is monitored.",35],[10,"sideband_progress","","Textual progress from the remote.",35],[10,"raw","","Convert this set of callbacks to a raw callbacks structure.",35],[10,"open","","Attempt to open an already-existing repository at `path`.",36],[10,"init","","Creates a new repository in the specified folder.",36],[10,"init_bare","","Creates a new `--bare` repository in the specified folder.",36],[10,"init_opts","","Creates a new `--bare` repository in the specified folder.",36],[10,"clone","","Clone a remote repository.",36],[10,"from_raw","","Create a repository from the raw underlying pointer.",36],[10,"revparse","","Execute a rev-parse operation against the `spec` listed.",36],[10,"revparse_single","","Find a single object, as specified by a revision string.",36],[10,"is_bare","","Tests whether this repository is a bare repository or not.",36],[10,"is_shallow","","Tests whether this repository is a shallow clone.",36],[10,"is_empty","","Tests whether this repository is empty.",36],[10,"path","","Returns the path to the `.git` folder for normal repositories or the\nrepository itself for bare repositories.",36],[10,"state","","Returns the current state of this repository",36],[10,"workdir","","Get the path of the working directory for this repository.",36],[10,"namespace","","Get the currently active namespace for this repository.",36],[10,"namespace_bytes","","Get the currently active namespace for this repository as a byte array.",36],[10,"remotes","","List all remotes for a given repository",36],[10,"find_remote","","Get the information for a particular remote",36],[10,"remote","","Add a remote with the default fetch refspec to the repository's\nconfiguration.",36],[10,"remote_anonymous","","Create an anonymous remote",36],[10,"raw","","Get the underlying raw repository",36],[10,"reset","","Sets the current head to the specified object and optionally resets\nthe index and working tree to match.",36],[10,"reset_default","","Updates some entries in the index from the target commit tree.",36],[10,"head","","Retrieve and resolve the reference pointed at by HEAD.",36],[10,"references","","Create an iterator for the repo's references",36],[10,"references_glob","","Create an iterator for the repo's references that match the specified\nglob",36],[10,"submodules","","Load all submodules for this repository and return them.",36],[10,"branches","","Create an iterator which loops over the requested branches.",36],[10,"index","","Get the Index file for this repository.",36],[10,"config","","Get the configuration file for this repository.",36],[10,"blob","","Write an in-memory buffer to the ODB as a blob.",36],[10,"blob_path","","Read a file from the filesystem and write its content to the Object\nDatabase as a loose blob",36],[10,"find_blob","","Lookup a reference to one of the objects in a repository.",36],[10,"branch","","Create a new branch pointing at a target commit",36],[10,"find_branch","","Lookup a branch by its name in a repository.",36],[10,"commit","","Create new commit in the repository",36],[10,"find_commit","","Lookup a reference to one of the commits in a repository.",36],[10,"find_object","","Lookup a reference to one of the objects in a repository.",36],[10,"reference","","Create a new direct reference.",36],[10,"reference_symbolic","","Create a new symbolic reference.",36],[10,"find_reference","","Lookup a reference to one of the objects in a repository.",36],[10,"refname_to_id","","Lookup a reference by name and resolve immediately to OID.",36],[10,"signature","","Create a new action signature with default user and now timestamp.",36],[10,"submodule","","Set up a new git submodule for checkout.",36],[10,"find_submodule","","Lookup submodule information by name or path.",36],[10,"find_tree","","Lookup a reference to one of the objects in a repository.",36],[10,"tag","","Create a new tag in the repository from an object",36],[10,"find_tag","","Lookup a tag object from the repository.",36],[10,"tag_delete","","Delete an existing tag reference.",36],[10,"tag_names","","Get a list with all the tags in the repository.",36],[10,"checkout_head","","Updates files in the index and the working tree to match the content of\nthe commit pointed at by HEAD.",36],[10,"checkout_index","","Updates files in the working tree to match the content of the index.",36],[10,"checkout_tree","","Updates files in the index and working tree to match the content of the\ntree pointed at by the treeish.",36],[10,"drop","","",36],[10,"new","","Creates a default set of initialization options.",37],[10,"bare","","Create a bare repository with no working directory.",37],[10,"no_reinit","","Return an error if the repository path appears to already be a git\nrepository.",37],[10,"no_dotgit_dir","","Normally a '/.git/' will be appended to the repo apth for non-bare repos\n(if it is not already there), but passing this flag prevents that\nbehavior.",37],[10,"mkdir","","Make the repo path (and workdir path) as needed. The \".git\" directory\nwill always be created regardless of this flag.",37],[10,"mkpath","","Recursively make all components of the repo and workdir path sas\nnecessary.",37],[10,"external_template","","Enable or disable using external templates.",37],[10,"workdir_path","","The path do the working directory.",37],[10,"description","","If set, this will be used to initialize the \"description\" file in the\nrepository instead of using the template content.",37],[10,"template_path","","When the `external_template` option is set, this is the first location\nto check for the template directory.",37],[10,"initial_head","","The name of the head to point HEAD at.",37],[10,"origin_url","","If set, then after the rest of the repository initialization is\ncompleted an `origin` remote will be added pointing to this URL.",37],[10,"raw","","Creates a set of raw init options to be used with\n`git_repository_init_ext`.",37],[10,"from_objects","","Assembles a new revspec from the from/to components.",38],[10,"from","","Access the `from` range of this revspec.",38],[10,"to","","Access the `to` range of this revspec.",38],[10,"now","","Create a new action signature with a timestamp of 'now'.",39],[10,"new","","Create a new action signature.",39],[10,"from_raw","","Consumes ownership of a raw signature pointer",39],[10,"from_raw_const","","Creates a new signature from the give raw pointer, tied to the lifetime\nof the given object.",39],[10,"name","","Gets the name on the signature.",39],[10,"name_bytes","","Gets the name on the signature as a byte slice.",39],[10,"email","","Gets the email on the signature.",39],[10,"email_bytes","","Gets the email on the signature as a byte slice.",39],[10,"when","","Get the `when` of this signature in seconds since the epoch.",39],[10,"when_offset","","Get the offset of `when`, in minutes, of the signature's time zone from\nUTC.",39],[10,"raw","","Get access to the underlying raw signature",39],[10,"clone","","",39],[10,"drop","","",39],[10,"from_raw","","Creates a new string array from the raw representation.",40],[10,"get","","Returns None if the i'th string is not utf8 or if i is out of bounds.",40],[10,"get_bytes","","Returns None if `i` is out of bounds.",40],[10,"iter","","Returns an iterator over the strings contained within this array.",40],[10,"iter_bytes","","Returns an iterator over the strings contained within this array,\nyielding byte slices.",40],[10,"len","","Returns the number of strings in this array.",40],[10,"next","","",41],[10,"next","","",42],[10,"drop","","",40],[10,"from_raw","","Create a new object from its raw component.",43],[10,"branch","","Get the submodule's branch.",43],[10,"branch_bytes","","Get the branch for the submodule.",43],[10,"url","","Get the submodule's url.",43],[10,"url_bytes","","Get the url for the submodule.",43],[10,"name","","Get the submodule's name.",43],[10,"name_bytes","","Get the name for the submodule.",43],[10,"path","","Get the path for the submodule.",43],[10,"head_id","","Get the OID for the submodule in the current HEAD tree.",43],[10,"index_id","","Get the OID for the submodule in the index.",43],[10,"workdir_id","","Get the OID for the submodule in the current working directory.",43],[10,"init","","Copy submodule info into \".git/config\" file.",43],[10,"open","","Open the repository for a submodule.",43],[10,"raw","","Access the underlying raw git submodule pointer.",43],[10,"reload","","Reread submodule info from config, index, and HEAD.",43],[10,"save","","Write submodule settings to .gitmodules file.",43],[10,"sync","","Copy submodule remote info into submodule repo.",43],[10,"add_to_index","","Add current submodule HEAD commit to index of superproject.",43],[10,"add_finalize","","Resolve the setup of a new git submodule.",43],[10,"drop","","",43],[10,"from_raw","","Create a new tag from its raw component.",44],[10,"id","","Get the id (SHA1) of a repository tag",44],[10,"message","","Get the message of a tag",44],[10,"message_bytes","","Get the message of a tag",44],[10,"name","","Get the name of a tag",44],[10,"name_bytes","","Get the name of a tag",44],[10,"peel","","Recursively peel a tag until a non tag git_object is found",44],[10,"tagger","","Get the tagger (author) of a tag",44],[10,"target","","Get the tagged object of a tag",44],[10,"target_id","","Get the OID of the tagged object of a tag",44],[10,"target_type","","Get the OID of the tagged object of a tag",44],[10,"raw","","Get access to the underlying raw pointer.",44],[10,"drop","","",44],[10,"from_raw","","Create a new object from its raw component.",45],[10,"id","","Get the id (SHA1) of a repository object",45],[10,"raw","","Get access to the underlying raw pointer.",45],[10,"len","","Get the number of entries listed in this tree.",45],[10,"get_id","","Lookup a tree entry by SHA value.",45],[10,"get","","Lookup a tree entry by its position in the tree",45],[10,"get_name","","Lookup a tree entry by its filename",45],[10,"get_path","","Retrieve a tree entry contained in a tree or in any of its subtrees,\ngiven its relative path.",45],[10,"drop","","",45],[10,"from_raw_const","","Create a new tree entry from the raw pointer provided.",46],[10,"from_raw","","Create a new tree entry from the raw pointer provided.",46],[10,"raw","","Gain access to the underlying raw pointer for this tree entry.",46],[10,"id","","Get the id of the object pointed by the entry",46],[10,"name","","Get the filename of a tree entry",46],[10,"name_bytes","","Get the filename of a tree entry",46],[10,"to_object","","Convert a tree entry to the object it points to.",46],[10,"kind","","Get the type of the object pointed by the entry",46],[10,"filemode","","Get the UNIX file attributes of a tree entry",46],[10,"filemode_raw","","Get the raw UNIX file attributes of a tree entry",46],[10,"clone","","",46],[10,"partial_cmp","","",46],[10,"cmp","","",46],[10,"eq","","",46],[10,"drop","","",46],[4,"IndexMatchedPath","",""],[4,"Credentials","","Callback used to acquire credentials for when a remote is fetched."],[4,"TransferProgress","","Callback to be invoked while a transfer is in progress."],[4,"TransportMessage","","Callback for receiving messages delivered by the transport."],[18,"USER_PASS_PLAINTEXT","",""],[18,"SSH_KEY","",""],[18,"SSH_CUSTOM","",""],[18,"DEFAULT","",""],[18,"SSH_INTERACTIVE","",""],[18,"ADD_DEFAULT","",""],[18,"ADD_FORCE","",""],[18,"ADD_DISABLE_PATHSPEC_MATCH","",""],[18,"ADD_CHECK_PATHSPEC","",""],[10,"fmt","","",4],[10,"clone","","",4],[10,"eq","","",4],[10,"ne","","",4],[10,"fmt","","",5],[10,"clone","","",5],[10,"eq","","",5],[10,"ne","","",5],[10,"eq","","",8],[10,"ne","","",8],[10,"fmt","","",9],[10,"eq","","",9],[10,"ne","","",9],[10,"fmt","","",10],[10,"eq","","",10],[10,"ne","","",10],[10,"hash","","",47],[10,"cmp","","",47],[10,"partial_cmp","","",47],[10,"lt","","",47],[10,"le","","",47],[10,"gt","","",47],[10,"ge","","",47],[10,"clone","","",47],[10,"eq","","",47],[10,"ne","","",47],[10,"empty","","Returns an empty set of flags.",47],[10,"all","","Returns the set containing all flags.",47],[10,"bits","","Returns the raw value of the flags currently stored.",47],[10,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",47],[10,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",47],[10,"is_empty","","Returns `true` if no flags are currently stored.",47],[10,"is_all","","Returns `true` if all flags are currently set.",47],[10,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",47],[10,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",47],[10,"insert","","Inserts the specified flags in-place.",47],[10,"remove","","Removes the specified flags in-place.",47],[10,"toggle","","Toggles the specified flags in-place.",47],[10,"bitor","","Returns the union of the two sets of flags.",47],[10,"bitxor","","Returns the left flags, but with all the right flags toggled.",47],[10,"bitand","","Returns the intersection between the two sets of flags.",47],[10,"sub","","Returns the set difference of the two sets of flags.",47],[10,"not","","Returns the complement of this set of flags.",47],[10,"hash","","",48],[10,"cmp","","",48],[10,"partial_cmp","","",48],[10,"lt","","",48],[10,"le","","",48],[10,"gt","","",48],[10,"ge","","",48],[10,"clone","","",48],[10,"eq","","",48],[10,"ne","","",48],[10,"empty","","Returns an empty set of flags.",48],[10,"all","","Returns the set containing all flags.",48],[10,"bits","","Returns the raw value of the flags currently stored.",48],[10,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",48],[10,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",48],[10,"is_empty","","Returns `true` if no flags are currently stored.",48],[10,"is_all","","Returns `true` if all flags are currently set.",48],[10,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",48],[10,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",48],[10,"insert","","Inserts the specified flags in-place.",48],[10,"remove","","Removes the specified flags in-place.",48],[10,"toggle","","Toggles the specified flags in-place.",48],[10,"bitor","","Returns the union of the two sets of flags.",48],[10,"bitxor","","Returns the left flags, but with all the right flags toggled.",48],[10,"bitand","","Returns the intersection between the two sets of flags.",48],[10,"sub","","Returns the set difference of the two sets of flags.",48],[10,"not","","Returns the complement of this set of flags.",48],[10,"str","","Convert an object type to its string representation.",8],[10,"is_loose","","Determine if the given git_otype is a valid loose object type.",8],[10,"from_raw","","Convert a raw git_otype to an ObjectType",8],[10,"raw","","Convert this kind into its raw representation",8],[10,"from_str","","Convert a string object type representation to its object type.",8],[10,"fmt","","",8],[10,"from_raw","","Converts a raw configuration level to a ConfigLevel",10]],"paths":[[1,"CredentialHelper"],[1,"IndexEntry"],[1,"Status"],[1,"Progress"],[2,"ErrorCode"],[2,"RepositoryState"],[2,"Direction"],[2,"ResetType"],[2,"ObjectType"],[2,"BranchType"],[2,"ConfigLevel"],[1,"CheckoutBuilder"],[1,"RepoBuilder"],[1,"Blob"],[1,"Branch"],[1,"Branches"],[1,"Buf"],[1,"Commit"],[1,"Parents"],[1,"Config"],[1,"ConfigEntry"],[1,"ConfigEntries"],[1,"Cred"],[1,"Error"],[1,"Index"],[1,"IndexEntries"],[1,"Object"],[1,"Oid"],[1,"Push"],[1,"Reference"],[1,"References"],[1,"ReferenceNames"],[1,"Refspec"],[1,"Remote"],[1,"Refspecs"],[1,"RemoteCallbacks"],[1,"Repository"],[1,"RepositoryInitOptions"],[1,"Revspec"],[1,"Signature"],[1,"StringArray"],[1,"StringArrayItems"],[1,"StringArrayBytes"],[1,"Submodule"],[1,"Tag"],[1,"Tree"],[1,"TreeEntry"],[1,"CredentialType"],[1,"IndexAddOption"]]};
searchIndex['url'] = {"items":[[0,"","url","<a href=\"https://github.com/servo/rust-url\"><img style=\"position: absolute; top: 0; left: 0; border: 0;\" src=\"../github.png\" alt=\"Fork me on GitHub\"></a>\n<style>.sidebar { margin-top: 53px }</style>"],[1,"Ipv6Address","","A 128 bit IPv6 address"],[11,"pieces","","",0],[1,"Url","","The parsed representation of an absolute URL."],[11,"scheme","","The scheme (a.k.a. protocol) of the URL, in ASCII lower case.",1],[11,"scheme_data","","The components of the URL whose representation depends on where the scheme is *relative*.",1],[11,"query","","The query string of the URL.",1],[11,"fragment","","The fragment identifier of the URL.",1],[1,"UrlRelativeSchemeData","","Components for URLs in a *relative* scheme such as HTTP."],[11,"username","","The username of the URL, as a possibly empty, pecent-encoded string.",2],[11,"password","","The password of the URL.",2],[11,"host","","The host of the URL, either a domain name or an IPv4 address",2],[11,"port","","The port number of the URL.\n`None` for file-like schemes, or to indicate the default port number.",2],[11,"default_port","","The default port number for the URL’s scheme.\n`None` for file-like schemes.",2],[11,"path","","The path of the URL, as vector of pecent-encoded strings.",2],[1,"UrlParser","","A set of optional parameters for URL parsing."],[2,"Host","","The host name of an URL."],[12,"Domain","","A (DNS) domain name or an IPv4 address.",3],[12,"Ipv6","","An IPv6 address, represented inside `[...]` square brackets\nso that `:` colon characters in the address are not ambiguous\nwith the port number delimiter.",3],[2,"ParseError","","Errors that can occur during parsing."],[12,"EmptyHost","","",4],[12,"InvalidScheme","","",4],[12,"InvalidPort","","",4],[12,"InvalidIpv6Address","","",4],[12,"InvalidDomainCharacter","","",4],[12,"InvalidCharacter","","",4],[12,"InvalidBackslash","","",4],[12,"InvalidPercentEncoded","","",4],[12,"InvalidAtSymbolInUser","","",4],[12,"ExpectedTwoSlashes","","",4],[12,"ExpectedInitialSlash","","",4],[12,"NonUrlCodePoint","","",4],[12,"RelativeUrlWithScheme","","",4],[12,"RelativeUrlWithoutBase","","",4],[12,"RelativeUrlWithNonRelativeBase","","",4],[12,"NonAsciiDomainsNotSupportedYet","","",4],[12,"CannotSetFileScheme","","",4],[12,"CannotSetJavascriptScheme","","",4],[12,"CannotSetNonRelativeScheme","","",4],[2,"SchemeData","","The components of the URL whose representation depends on where the scheme is *relative*."],[12,"RelativeSchemeData","","Components for URLs in a *relative* scheme such as HTTP.",5],[12,"NonRelativeSchemeData","","No further structure is assumed for *non-relative* schemes such as `data` and `mailto`.",5],[2,"SchemeType","","Determines the behavior of the URL parser for a given scheme."],[12,"NonRelativeScheme","","Indicate that the scheme is *non-relative*.",6],[12,"RelativeScheme","","Indicate that the scheme is *relative*, and what the default port number is.",6],[12,"FileLikeRelativeScheme","","Indicate a *relative* scheme similar to the *file* scheme.",6],[3,"parse_path","","Parse `input` as a “standalone” URL path,\nwith an optional query string and fragment identifier."],[3,"whatwg_scheme_type_mapper","","http://url.spec.whatwg.org/#relative-scheme"],[10,"clone","","",3],[10,"eq","","",3],[10,"ne","","",3],[10,"clone","","",0],[10,"eq","","",0],[10,"parse","","Parse a host: either an IPv6 address in [] square brackets, or a domain.",3],[10,"serialize","","Serialize the host as a string.",3],[10,"fmt","","",3],[10,"parse","","Parse an IPv6 address, without the [] square brackets.",0],[10,"serialize","","Serialize the IPv6 address to a string.",0],[10,"fmt","","",0],[10,"clone","","",4],[10,"eq","","",4],[10,"ne","","",4],[10,"fmt","","",4],[0,"percent_encoding","",""],[1,"EncodeSet","url::percent_encoding","Represents a set of characters / bytes that should be percent-encoded."],[3,"percent_encode_to","","Percent-encode the given bytes, and push the result to `output`."],[3,"percent_encode","","Percent-encode the given bytes."],[3,"utf8_percent_encode_to","","Percent-encode the UTF-8 encoding of the given string, and push the result to `output`."],[3,"utf8_percent_encode","","Percent-encode the UTF-8 encoding of the given string."],[3,"percent_decode_to","","Percent-decode the given bytes, and push the result to `output`."],[3,"percent_decode","","Percent-decode the given bytes."],[3,"lossy_utf8_percent_decode","","Percent-decode the given bytes, and decode the result as UTF-8."],[3,"from_hex","",""],[5,"SIMPLE_ENCODE_SET","","This encode set is used for fragment identifier and non-relative scheme data."],[5,"QUERY_ENCODE_SET","","This encode set is used in the URL parser for query strings."],[5,"DEFAULT_ENCODE_SET","","This encode set is used for path components."],[5,"USERINFO_ENCODE_SET","","This encode set is used in the URL parser for usernames and passwords."],[5,"PASSWORD_ENCODE_SET","","This encode set should be used when setting the password field of a parsed URL."],[5,"USERNAME_ENCODE_SET","","This encode set should be used when setting the username field of a parsed URL."],[5,"FORM_URLENCODED_ENCODE_SET","","This encode set is used in `application/x-www-form-urlencoded` serialization."],[0,"form_urlencoded","url","Parser and serializer for the [`application/x-www-form-urlencoded` format](\nhttp://url.spec.whatwg.org/#application/x-www-form-urlencoded),\nas used by HTML forms."],[3,"parse_str","url::form_urlencoded","Convert a string in the `application/x-www-form-urlencoded` format\ninto a vector of (name, value) pairs."],[3,"parse_bytes","","Convert a byte string in the `application/x-www-form-urlencoded` format\ninto a vector of (name, value) pairs."],[3,"serialize_owned","","Convert a slice of owned (name, value) pairs\ninto a string in the `application/x-www-form-urlencoded` format."],[3,"serialize","","Convert an iterator of (name, value) pairs\ninto a string in the `application/x-www-form-urlencoded` format."],[0,"punycode","url","Punycode ([RFC 3492](http://tools.ietf.org/html/rfc3492)) implementation."],[3,"decode_to_string","url::punycode","Convert Punycode to an Unicode `String`."],[3,"decode","","Convert Punycode to Unicode."],[3,"encode_str","","Convert an Unicode `str` to Punycode."],[3,"encode","","Convert Unicode to Punycode."],[0,"format","url","Formatting utilities for URLs."],[1,"PathFormatter","url::format","Formatter and serializer for URL path data."],[11,"path","","The path as a slice of string-like objects (String or &str).",7],[1,"UserInfoFormatter","","Formatter and serializer for URL username and password data."],[11,"username","","URL username as a string slice.",8],[11,"password","","URL password as an optional string slice.",8],[1,"UrlNoFragmentFormatter","","Formatter for URLs which ignores the fragment field."],[11,"url","","",9],[10,"fmt","","",7],[10,"fmt","","",8],[10,"fmt","","",9],[4,"ErrorHandler","url","This is called on non-fatal parse errors."],[4,"ParseResult","",""],[6,"ToUrlPath","",""],[9,"to_url_path","","",10],[6,"FromUrlPath","",""],[9,"from_url_path","","",11],[10,"clone","","",1],[10,"eq","","",1],[10,"ne","","",1],[10,"clone","","",5],[10,"eq","","",5],[10,"ne","","",5],[10,"clone","","",2],[10,"eq","","",2],[10,"ne","","",2],[10,"hash","","",1],[10,"new","","Return a new UrlParser with default parameters.",12],[10,"base_url","","Set the base URL used for resolving relative URL references, and return the `UrlParser`.\nThe default is no base URL, so that relative URLs references fail to parse.",12],[10,"query_encoding_override","","Set the character encoding the query string is encoded as before percent-encoding,\nand return the `UrlParser`.",12],[10,"error_handler","","Set an error handler for non-fatal parse errors, and return the `UrlParser`.",12],[10,"scheme_type_mapper","","Set a *scheme type mapper*, and return the `UrlParser`.",12],[10,"parse","","Parse `input` as an URL, with all the parameters previously set in the `UrlParser`.",12],[10,"parse_path","","Parse `input` as a “standalone” URL path,\nwith an optional query string and fragment identifier.",12],[10,"eq","","",6],[10,"ne","","",6],[10,"default_port","","",6],[10,"parse","","Parse an URL with the default `UrlParser` parameters.",1],[10,"from_file_path","","Convert a file name as `std::path::Path` into an URL in the `file` scheme.",1],[10,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL in the `file` scheme.",1],[10,"to_file_path","","Assuming the URL is in the `file` scheme or similar,\nconvert its path to an absolute `std::path::Path`.",1],[10,"serialize","","Return the serialization of this URL as a string.",1],[10,"serialize_no_fragment","","Return the serialization of this URL, without the fragment identifier, as a string",1],[10,"non_relative_scheme_data","","If the URL is *non-relative*, return the string scheme data.",1],[10,"non_relative_scheme_data_mut","","If the URL is *non-relative*, return a mutable reference to the string scheme data.",1],[10,"relative_scheme_data","","If the URL is in a *relative scheme*, return the structured scheme data.",1],[10,"relative_scheme_data_mut","","If the URL is in a *relative scheme*,\nreturn a mutable reference to the structured scheme data.",1],[10,"username","","If the URL is in a *relative scheme*, return its username.",1],[10,"username_mut","","If the URL is in a *relative scheme*, return a mutable reference to its username.",1],[10,"lossy_percent_decode_username","","Percent-decode the URL’s username, if any.",1],[10,"password","","If the URL is in a *relative scheme*, return its password, if any.",1],[10,"password_mut","","If the URL is in a *relative scheme*, return a mutable reference to its password, if any.",1],[10,"lossy_percent_decode_password","","Percent-decode the URL’s password, if any.",1],[10,"serialize_userinfo","","Serialize the URL's username and password, if any.",1],[10,"host","","If the URL is in a *relative scheme*, return its structured host.",1],[10,"host_mut","","If the URL is in a *relative scheme*, return a mutable reference to its structured host.",1],[10,"domain","","If the URL is in a *relative scheme* and its host is a domain,\nreturn the domain as a string.",1],[10,"domain_mut","","If the URL is in a *relative scheme* and its host is a domain,\nreturn a mutable reference to the domain string.",1],[10,"serialize_host","","If the URL is in a *relative scheme*, serialize its host as a string.",1],[10,"port","","If the URL is in a *relative scheme* and has a port number, return it.",1],[10,"port_mut","","If the URL is in a *relative scheme*, return a mutable reference to its port.",1],[10,"port_or_default","","If the URL is in a *relative scheme* that is not a file-like,\nreturn its port number, even if it is the default.",1],[10,"path","","If the URL is in a *relative scheme*, return its path components.",1],[10,"path_mut","","If the URL is in a *relative scheme*, return a mutable reference to its path components.",1],[10,"serialize_path","","If the URL is in a *relative scheme*, serialize its path as a string.",1],[10,"query_pairs","","Parse the URL’s query string, if any, as `application/x-www-form-urlencoded`\nand return a vector of (key, value) pairs.",1],[10,"set_query_from_pairs","","Serialize an iterator of (key, value) pairs as `application/x-www-form-urlencoded`\nand set it as the URL’s query string.",1],[10,"lossy_percent_decode_query","","Percent-decode the URL’s query string, if any.",1],[10,"lossy_percent_decode_fragment","","Percent-decode the URL’s fragment identifier, if any.",1],[10,"encode","","",1],[10,"decode","","",1],[10,"fmt","","",1],[10,"fmt","","",5],[10,"lossy_percent_decode_username","","Percent-decode the URL’s username.",2],[10,"lossy_percent_decode_password","","Percent-decode the URL’s password, if any.",2],[10,"to_file_path","","Assuming the URL is in the `file` scheme or similar,\nconvert its path to an absolute `std::path::Path`.",2],[10,"domain","","If the host is a domain, return the domain as a string.",2],[10,"domain_mut","","If the host is a domain, return a mutable reference to the domain string.",2],[10,"port_or_default","","Return the port number of the URL, even if it is the default.\nReturn `None` for file-like URLs.",2],[10,"serialize_path","","Serialize the path as a string.",2],[10,"serialize_userinfo","","Serialize the userinfo as a string.",2],[10,"fmt","","",2],[10,"to_url_path","std::path::posix","",13],[10,"to_url_path","std::path::windows","",14],[10,"from_url_path","std::path::posix","",13],[10,"from_url_path","std::path::windows","",14]],"paths":[[1,"Ipv6Address"],[1,"Url"],[1,"UrlRelativeSchemeData"],[2,"Host"],[2,"ParseError"],[2,"SchemeData"],[2,"SchemeType"],[1,"PathFormatter"],[1,"UserInfoFormatter"],[1,"UrlNoFragmentFormatter"],[6,"ToUrlPath"],[6,"FromUrlPath"],[1,"UrlParser"],[1,"Path"],[1,"Path"]]};

searchIndex['encoding'] = {"items":[[0,"","encoding","# Rust-encoding"],[0,"types","","Interface to the character encoding."],[1,"CodecError","encoding::types","Error information from either encoder or decoder."],[11,"upto","","The byte position of the first remaining byte, with respect to the *current* input.\nFor the `finish` call, this should be no more than zero (since there is no input).\nIt can be negative if the remaining byte is in the prior inputs,\nas long as the remaining byte is not yet processed.\nThe caller should feed the bytes starting from this point again\nin order to continue encoding or decoding after an error.",0],[11,"cause","","A human-readable cause of the error.",0],[2,"DecoderTrap","","Trap, which handles decoder errors."],[12,"DecodeStrict","","Immediately fails on errors.\nCorresponds to WHATWG \"fatal\" error algorithm.",1],[12,"DecodeReplace","","Replaces an error with a U+FFFD (decoder).\nCorresponds to WHATWG \"replacement\" error algorithm.",1],[12,"DecodeIgnore","","Silently ignores an error, effectively replacing it with an empty sequence.",1],[12,"DecoderCall","","Calls given function to handle decoder errors.\nThe function is given the current decoder, input and output writer,\nand should return true only when it is fine to keep going.",1],[2,"EncoderTrap","",""],[12,"EncodeStrict","","Immediately fails on errors.\nCorresponds to WHATWG \"fatal\" error algorithm.",2],[12,"EncodeReplace","","Replaces an error with `?` in given encoding.\nNote that this fails when `?` cannot be represented in given encoding.\nCorresponds to WHATWG \"URL\" error algorithms.",2],[12,"EncodeIgnore","","Silently ignores an error, effectively replacing it with an empty sequence.",2],[12,"EncodeNcrEscape","","Replaces an error with XML numeric character references (e.g. `&#1234;`).\nThe encoder trap fails when NCRs cannot be represented in given encoding.\nCorresponds to WHATWG \"<form>\" error algorithms.",2],[12,"EncoderCall","","Calls given function to handle encoder errors.\nThe function is given the current encoder, input and output writer,\nand should return true only when it is fine to keep going.",2],[3,"decode","","Determine the encoding by looking for a Byte Order Mark (BOM)\nand decoded a single string in memory.\nReturn the result and the used encoding."],[4,"EncodingRef","","A trait object using dynamic dispatch which is a sendable reference to the encoding,\nfor code where the encoding is not known at compile-time."],[4,"EncoderTrapFunc","","A type of the bare function in `EncoderTrap` values."],[4,"DecoderTrapFunc","","A type of the bare function in `DecoderTrap` values."],[6,"ByteWriter","","Byte writer used by `Encoder`s. In most cases this will be an owned vector of `u8`."],[10,"writer_hint","","Hints an expected lower bound on the length (in bytes) of the output\nuntil the next call to `writer_hint`,\nso that the writer can reserve the memory for writing.\n`Encoder`s are recommended but not required to call this method\nwith an appropriate estimate.\nBy default this method does nothing.",3],[9,"write_byte","","Writes a single byte.",3],[9,"write_bytes","","Writes a number of bytes.",3],[6,"StringWriter","","String writer used by `Decoder`s. In most cases this will be an owned string."],[10,"writer_hint","","Hints an expected lower bound on the length (in bytes) of the output\nuntil the next call to `writer_hint`,\nso that the writer can reserve the memory for writing.\n`Decoder`s are recommended but not required to call this method\nwith an appropriate estimate.\nBy default this method does nothing.",4],[9,"write_char","","Writes a single character.",4],[9,"write_str","","Writes a string.",4],[6,"Encoder","","Encoder converting a Unicode string into a byte sequence.\nThis is a lower level interface, and normally `Encoding::encode` should be used instead."],[9,"from_self","","Creates a fresh `Encoder` instance which parameters are same as `self`.",5],[10,"is_ascii_compatible","","Returns true if this encoding is compatible to ASCII,\ni.e. U+0000 through U+007F always map to bytes 00 through 7F and nothing else.",5],[9,"raw_feed","","Feeds given portion of string to the encoder,\npushes the an encoded byte sequence at the end of the given output,\nand returns a byte offset to the first unprocessed character\n(that can be zero when the first such character appeared in the prior calls to `raw_feed`)\nand optional error information (None means success).",5],[9,"raw_finish","","Finishes the encoder,\npushes the an encoded byte sequence at the end of the given output,\nand returns optional error information (None means success).\n`remaining` value of the error information, if any, is always an empty string.",5],[6,"Decoder","","Decoder converting a byte sequence into a Unicode string.\nThis is a lower level interface, and normally `Encoding::decode` should be used instead."],[9,"from_self","","Creates a fresh `Decoder` instance which parameters are same as `self`.",6],[10,"is_ascii_compatible","","Returns true if this encoding is compatible to ASCII,\ni.e. bytes 00 through 7F always map to U+0000 through U+007F and nothing else.",6],[9,"raw_feed","","Feeds given portion of byte sequence to the encoder,\npushes the a decoded string at the end of the given output,\nand returns an offset to the first unprocessed byte\n(that can be zero when the first such byte appeared in the prior calls to `raw_feed`)\nand optional error information (None means success).",6],[9,"raw_finish","","Finishes the decoder,\npushes the a decoded string at the end of the given output,\nand returns optional error information (None means success).",6],[6,"Encoding","","Character encoding."],[9,"name","","Returns the canonical name of given encoding.\nThis name is guaranteed to be unique across built-in encodings,\nbut it is not normative and would be at most arbitrary.",7],[10,"whatwg_name","","Returns a name of given encoding defined in the WHATWG Encoding standard, if any.\nThis name often differs from `name` due to the compatibility reason.",7],[9,"encoder","","Creates a new encoder.",7],[9,"decoder","","Creates a new decoder.",7],[10,"encode","","An easy-to-use interface to `Encoder`.\nOn the encoder error `trap` is called,\nwhich may return a replacement sequence to continue processing,\nor a failure to return the error.",7],[10,"decode","","An easy-to-use interface to `Decoder`.\nOn the decoder error `trap` is called,\nwhich may return a replacement string to continue processing,\nor a failure to return the error.",7],[10,"writer_hint","collections::vec","",8],[10,"write_byte","","",8],[10,"write_bytes","","",8],[10,"writer_hint","collections::string","",9],[10,"write_char","","",9],[10,"write_str","","",9],[0,"index","encoding","Indices used for character encoding implementation. Semi-internal."],[0,"ibm866","encoding::index",""],[3,"forward","encoding::index::ibm866",""],[3,"backward","",""],[0,"iso_8859_2","encoding::index",""],[3,"forward","encoding::index::iso_8859_2",""],[3,"backward","",""],[0,"iso_8859_3","encoding::index",""],[3,"forward","encoding::index::iso_8859_3",""],[3,"backward","",""],[0,"iso_8859_4","encoding::index",""],[3,"forward","encoding::index::iso_8859_4",""],[3,"backward","",""],[0,"iso_8859_5","encoding::index",""],[3,"forward","encoding::index::iso_8859_5",""],[3,"backward","",""],[0,"iso_8859_6","encoding::index",""],[3,"forward","encoding::index::iso_8859_6",""],[3,"backward","",""],[0,"iso_8859_7","encoding::index",""],[3,"forward","encoding::index::iso_8859_7",""],[3,"backward","",""],[0,"iso_8859_8","encoding::index",""],[3,"forward","encoding::index::iso_8859_8",""],[3,"backward","",""],[0,"iso_8859_10","encoding::index",""],[3,"forward","encoding::index::iso_8859_10",""],[3,"backward","",""],[0,"iso_8859_13","encoding::index",""],[3,"forward","encoding::index::iso_8859_13",""],[3,"backward","",""],[0,"iso_8859_14","encoding::index",""],[3,"forward","encoding::index::iso_8859_14",""],[3,"backward","",""],[0,"iso_8859_15","encoding::index",""],[3,"forward","encoding::index::iso_8859_15",""],[3,"backward","",""],[0,"iso_8859_16","encoding::index",""],[3,"forward","encoding::index::iso_8859_16",""],[3,"backward","",""],[0,"koi8_r","encoding::index",""],[3,"forward","encoding::index::koi8_r",""],[3,"backward","",""],[0,"koi8_u","encoding::index",""],[3,"forward","encoding::index::koi8_u",""],[3,"backward","",""],[0,"macintosh","encoding::index",""],[3,"forward","encoding::index::macintosh",""],[3,"backward","",""],[0,"windows_874","encoding::index",""],[3,"forward","encoding::index::windows_874",""],[3,"backward","",""],[0,"windows_1250","encoding::index",""],[3,"forward","encoding::index::windows_1250",""],[3,"backward","",""],[0,"windows_1251","encoding::index",""],[3,"forward","encoding::index::windows_1251",""],[3,"backward","",""],[0,"windows_1252","encoding::index",""],[3,"forward","encoding::index::windows_1252",""],[3,"backward","",""],[0,"windows_1253","encoding::index",""],[3,"forward","encoding::index::windows_1253",""],[3,"backward","",""],[0,"windows_1254","encoding::index",""],[3,"forward","encoding::index::windows_1254",""],[3,"backward","",""],[0,"windows_1255","encoding::index",""],[3,"forward","encoding::index::windows_1255",""],[3,"backward","",""],[0,"windows_1256","encoding::index",""],[3,"forward","encoding::index::windows_1256",""],[3,"backward","",""],[0,"windows_1257","encoding::index",""],[3,"forward","encoding::index::windows_1257",""],[3,"backward","",""],[0,"windows_1258","encoding::index",""],[3,"forward","encoding::index::windows_1258",""],[3,"backward","",""],[0,"x_mac_cyrillic","encoding::index",""],[3,"forward","encoding::index::x_mac_cyrillic",""],[3,"backward","",""],[0,"big5","encoding::index",""],[3,"forward","encoding::index::big5",""],[3,"backward","",""],[0,"euc_kr","encoding::index",""],[3,"forward","encoding::index::euc_kr",""],[3,"backward","",""],[0,"gb18030","encoding::index",""],[3,"forward","encoding::index::gb18030",""],[3,"backward","",""],[0,"gb18030_ranges","encoding::index",""],[3,"forward","encoding::index::gb18030_ranges",""],[3,"backward","",""],[0,"jis0208","encoding::index",""],[3,"forward","encoding::index::jis0208",""],[3,"backward","",""],[3,"backward_remapped","",""],[0,"jis0212","encoding::index",""],[3,"forward","encoding::index::jis0212",""],[3,"backward","",""],[0,"codec","encoding","Codec implementations."],[0,"error","encoding::codec","A placeholder encoding that returns encoder/decoder error for every case."],[1,"ErrorEncoding","encoding::codec::error","An encoding that returns encoder/decoder error for every case."],[1,"ErrorEncoder","","An encoder that always returns error."],[1,"ErrorDecoder","","A decoder that always returns error."],[10,"clone","","",10],[10,"name","","",10],[10,"encoder","","",10],[10,"decoder","","",10],[10,"clone","","",11],[10,"new","","",11],[10,"from_self","","",11],[10,"raw_feed","","",11],[10,"raw_finish","","",11],[10,"clone","","",12],[10,"new","","",12],[10,"from_self","","",12],[10,"raw_feed","","",12],[10,"raw_finish","","",12],[0,"ascii","encoding::codec","7-bit ASCII encoding."],[1,"ASCIIEncoding","encoding::codec::ascii","ASCII, also known as ISO/IEC 646:US."],[1,"ASCIIEncoder","","An encoder for ASCII."],[1,"ASCIIDecoder","","A decoder for ASCII."],[10,"clone","","",13],[10,"name","","",13],[10,"encoder","","",13],[10,"decoder","","",13],[10,"clone","","",14],[10,"new","","",14],[10,"from_self","","",14],[10,"is_ascii_compatible","","",14],[10,"raw_feed","","",14],[10,"raw_finish","","",14],[10,"clone","","",15],[10,"new","","",15],[10,"from_self","","",15],[10,"is_ascii_compatible","","",15],[10,"raw_feed","","",15],[10,"raw_finish","","",15],[0,"singlebyte","encoding::codec","Common codec implementation for single-byte encodings."],[1,"SingleByteEncoding","encoding::codec::singlebyte","A common framework for single-byte encodings based on ASCII."],[11,"name","","",16],[11,"whatwg_name","","",16],[11,"index_forward","","",16],[11,"index_backward","","",16],[1,"SingleByteEncoder","","An encoder for single-byte encodings based on ASCII."],[1,"SingleByteDecoder","","A decoder for single-byte encodings based on ASCII."],[0,"iso_8859_1","","Algorithmic mapping for ISO 8859-1."],[3,"forward","encoding::codec::singlebyte::iso_8859_1",""],[3,"backward","",""],[10,"name","encoding::codec::singlebyte","",16],[10,"whatwg_name","","",16],[10,"encoder","","",16],[10,"decoder","","",16],[10,"clone","","",17],[10,"new","","",17],[10,"from_self","","",17],[10,"is_ascii_compatible","","",17],[10,"raw_feed","","",17],[10,"raw_finish","","",17],[10,"clone","","",18],[10,"new","","",18],[10,"from_self","","",18],[10,"is_ascii_compatible","","",18],[10,"raw_feed","","",18],[10,"raw_finish","","",18],[0,"utf_8","encoding::codec","UTF-8, the universal encoding."],[1,"UTF8Encoding","encoding::codec::utf_8","UTF-8 (UCS Transformation Format, 8-bit)."],[1,"UTF8Encoder","","An encoder for UTF-8."],[1,"UTF8Decoder","","A decoder for UTF-8."],[3,"from_utf8","","Equivalent to `std::str::from_utf8`.\nThis function is provided for the fair benchmark against the stdlib's UTF-8 conversion\nfunctions, as rust-encoding always allocates a new string."],[10,"clone","","",19],[10,"name","","",19],[10,"whatwg_name","","",19],[10,"encoder","","",19],[10,"decoder","","",19],[10,"clone","","",20],[10,"new","","",20],[10,"from_self","","",20],[10,"is_ascii_compatible","","",20],[10,"raw_feed","","",20],[10,"raw_finish","","",20],[10,"new","","",21],[10,"clone","","",21],[10,"from_self","","",21],[10,"is_ascii_compatible","","",21],[10,"raw_feed","","",21],[10,"raw_finish","","",21],[0,"utf_16","encoding::codec","UTF-16."],[1,"Little","encoding::codec::utf_16","An implementation type for little endian."],[1,"Big","","An implementation type for big endian."],[1,"UTF16Encoding","","UTF-16 (UCS Transformation Format, 16-bit)."],[1,"UTF16Encoder","","An encoder for UTF-16."],[1,"UTF16Decoder","","A decoder for UTF-16."],[4,"UTF16LEEncoding","","UTF-16 in little endian."],[4,"UTF16BEEncoding","","UTF-16 in big endian."],[6,"Endian","","An internal trait used to customize UTF-16 implementations."],[9,"name","","",22],[9,"whatwg_name","","",22],[9,"write_two_bytes","","",22],[9,"concat_two_bytes","","",22],[10,"clone","","",23],[10,"clone","","",24],[10,"name","","",23],[10,"whatwg_name","","",23],[10,"write_two_bytes","","",23],[10,"concat_two_bytes","","",23],[10,"name","","",24],[10,"whatwg_name","","",24],[10,"write_two_bytes","","",24],[10,"concat_two_bytes","","",24],[10,"clone","","",25],[10,"name","","",25],[10,"whatwg_name","","",25],[10,"encoder","","",25],[10,"decoder","","",25],[10,"clone","","",26],[10,"from_self","","",26],[10,"raw_feed","","",26],[10,"raw_finish","","",26],[10,"new","","",27],[10,"from_self","","",27],[10,"raw_feed","","",27],[10,"raw_finish","","",27],[0,"korean","encoding::codec","Legacy Korean encodings based on KS X 1001."],[1,"Windows949Encoding","encoding::codec::korean","Windows code page 949."],[1,"Windows949Encoder","","An encoder for Windows code page 949."],[1,"Windows949Decoder","","A decoder for Windows code page 949."],[10,"clone","","",28],[10,"name","","",28],[10,"whatwg_name","","",28],[10,"encoder","","",28],[10,"decoder","","",28],[10,"clone","","",29],[10,"new","","",29],[10,"from_self","","",29],[10,"is_ascii_compatible","","",29],[10,"raw_feed","","",29],[10,"raw_finish","","",29],[10,"clone","","",30],[10,"new","","",30],[10,"from_self","","",30],[10,"is_ascii_compatible","","",30],[10,"raw_feed","","",30],[10,"raw_finish","","",30],[0,"japanese","encoding::codec","Legacy Japanese encodings based on JIS X 0208 and JIS X 0212."],[1,"EUCJPEncoding","encoding::codec::japanese","EUC-JP. (XXX with asymmetric JIS X 0212 support)"],[1,"EUCJPEncoder","","An encoder for EUC-JP with unused G3 character set."],[1,"EUCJP0212Decoder","","A decoder for EUC-JP with JIS X 0212 in G3."],[1,"Windows31JEncoding","","Windows code page 932, i.e. Shift_JIS with IBM/NEC extensions."],[1,"Windows31JEncoder","","An encoder for Shift_JIS with IBM/NEC extensions."],[1,"Windows31JDecoder","","A decoder for Shift_JIS with IBM/NEC extensions."],[1,"ISO2022JPEncoding","","ISO-2022-JP."],[1,"ISO2022JPEncoder","","An encoder for ISO-2022-JP without JIS X 0212/0213 support."],[1,"ISO2022JPDecoder","","A decoder for ISO-2022-JP with JIS X 0212 support."],[10,"clone","","",31],[10,"name","","",31],[10,"whatwg_name","","",31],[10,"encoder","","",31],[10,"decoder","","",31],[10,"clone","","",32],[10,"new","","",32],[10,"from_self","","",32],[10,"is_ascii_compatible","","",32],[10,"raw_feed","","",32],[10,"raw_finish","","",32],[10,"clone","","",33],[10,"new","","",33],[10,"from_self","","",33],[10,"is_ascii_compatible","","",33],[10,"raw_feed","","",33],[10,"raw_finish","","",33],[10,"clone","","",34],[10,"name","","",34],[10,"whatwg_name","","",34],[10,"encoder","","",34],[10,"decoder","","",34],[10,"clone","","",35],[10,"new","","",35],[10,"from_self","","",35],[10,"is_ascii_compatible","","",35],[10,"raw_feed","","",35],[10,"raw_finish","","",35],[10,"clone","","",36],[10,"new","","",36],[10,"from_self","","",36],[10,"is_ascii_compatible","","",36],[10,"raw_feed","","",36],[10,"raw_finish","","",36],[10,"clone","","",37],[10,"name","","",37],[10,"whatwg_name","","",37],[10,"encoder","","",37],[10,"decoder","","",37],[10,"clone","","",38],[10,"new","","",38],[10,"from_self","","",38],[10,"is_ascii_compatible","","",38],[10,"raw_feed","","",38],[10,"raw_finish","","",38],[10,"clone","","",39],[10,"new","","",39],[10,"from_self","","",39],[10,"is_ascii_compatible","","",39],[10,"raw_feed","","",39],[10,"raw_finish","","",39],[0,"simpchinese","encoding::codec","Legacy simplified Chinese encodings based on GB 2312 and GB 18030."],[1,"GB18030Encoding","encoding::codec::simpchinese","GB 18030-2005."],[1,"GB18030Encoder","","An encoder for GB 18030."],[1,"GB18030Decoder","","A decoder for GB 18030."],[1,"HZEncoding","","HZ. (RFC 1843)"],[1,"HZEncoder","","An encoder for HZ."],[1,"HZDecoder","","A decoder for HZ."],[10,"clone","","",40],[10,"name","","",40],[10,"whatwg_name","","",40],[10,"encoder","","",40],[10,"decoder","","",40],[10,"clone","","",41],[10,"new","","",41],[10,"from_self","","",41],[10,"is_ascii_compatible","","",41],[10,"raw_feed","","",41],[10,"raw_finish","","",41],[10,"clone","","",42],[10,"new","","",42],[10,"from_self","","",42],[10,"is_ascii_compatible","","",42],[10,"raw_feed","","",42],[10,"raw_finish","","",42],[10,"clone","","",43],[10,"name","","",43],[10,"whatwg_name","","",43],[10,"encoder","","",43],[10,"decoder","","",43],[10,"clone","","",44],[10,"new","","",44],[10,"from_self","","",44],[10,"is_ascii_compatible","","",44],[10,"raw_feed","","",44],[10,"raw_finish","","",44],[10,"clone","","",45],[10,"new","","",45],[10,"from_self","","",45],[10,"is_ascii_compatible","","",45],[10,"raw_feed","","",45],[10,"raw_finish","","",45],[0,"tradchinese","encoding::codec","Legacy traditional Chinese encodings."],[1,"BigFive2003Encoding","encoding::codec::tradchinese","Big5-2003 with common extensions. (XXX with asymmetric HKSCS-2008 support)"],[1,"BigFive2003Encoder","","An encoder for Big5-2003."],[1,"BigFive2003HKSCS2008Decoder","","A decoder for Big5-2003 with HKSCS-2008 extension."],[10,"clone","","",46],[10,"name","","",46],[10,"whatwg_name","","",46],[10,"encoder","","",46],[10,"decoder","","",46],[10,"clone","","",47],[10,"new","","",47],[10,"from_self","","",47],[10,"is_ascii_compatible","","",47],[10,"raw_feed","","",47],[10,"raw_finish","","",47],[10,"clone","","",48],[10,"new","","",48],[10,"from_self","","",48],[10,"is_ascii_compatible","","",48],[10,"raw_feed","","",48],[10,"raw_finish","","",48],[0,"whatwg","encoding::codec","Asymmetric or special encoding constructions required by the WHATWG Encoding standard."],[1,"EncoderOnlyUTF8Encoding","encoding::codec::whatwg","Replacement encoding used to solve a particular attack vector due to mismatching server and\nclient supports for encodings. It is rarely useful outside."],[0,"x_user_defined","","Algorithmic mapping for `x-user-defined` encoding."],[3,"forward","encoding::codec::whatwg::x_user_defined",""],[3,"backward","",""],[10,"clone","encoding::codec::whatwg","",49],[10,"name","","",49],[10,"whatwg_name","","",49],[10,"encoder","","",49],[10,"decoder","","",49],[0,"all","encoding","A list of all supported encodings. Useful for encodings fixed in the compile time."],[0,"whatwg","encoding::all",""],[5,"X_USER_DEFINED","encoding::all::whatwg",""],[5,"ISO_8859_8_I","",""],[5,"REPLACEMENT","",""],[5,"ERROR","encoding::all",""],[5,"ASCII","",""],[5,"IBM866","",""],[5,"ISO_8859_1","",""],[5,"ISO_8859_2","",""],[5,"ISO_8859_3","",""],[5,"ISO_8859_4","",""],[5,"ISO_8859_5","",""],[5,"ISO_8859_6","",""],[5,"ISO_8859_7","",""],[5,"ISO_8859_8","",""],[5,"ISO_8859_10","",""],[5,"ISO_8859_13","",""],[5,"ISO_8859_14","",""],[5,"ISO_8859_15","",""],[5,"ISO_8859_16","",""],[5,"KOI8_R","",""],[5,"KOI8_U","",""],[5,"MAC_ROMAN","",""],[5,"WINDOWS_874","",""],[5,"WINDOWS_1250","",""],[5,"WINDOWS_1251","",""],[5,"WINDOWS_1252","",""],[5,"WINDOWS_1253","",""],[5,"WINDOWS_1254","",""],[5,"WINDOWS_1255","",""],[5,"WINDOWS_1256","",""],[5,"WINDOWS_1257","",""],[5,"WINDOWS_1258","",""],[5,"MAC_CYRILLIC","",""],[5,"UTF_8","",""],[5,"UTF_16LE","",""],[5,"UTF_16BE","",""],[5,"WINDOWS_949","",""],[5,"EUC_JP","",""],[5,"WINDOWS_31J","",""],[5,"ISO_2022_JP","",""],[5,"GB18030","",""],[5,"HZ","",""],[5,"BIG5_2003","",""],[0,"label","encoding","An interface for retrieving an encoding (or a set of encodings) from a string/numeric label."],[3,"encoding_from_whatwg_label","encoding::label","Returns an encoding from given label, defined in the WHATWG Encoding standard, if any.\nImplements \"get an encoding\" algorithm: http://encoding.spec.whatwg.org/#decode"],[3,"encoding_from_windows_code_page","","Returns an encoding from Windows code page number.\nhttp://msdn.microsoft.com/en-us/library/windows/desktop/dd317756%28v=vs.85%29.aspx\nSometimes it can return a *superset* of the requested encoding, e.g. for several CJK encodings."]],"paths":[[1,"CodecError"],[2,"DecoderTrap"],[2,"EncoderTrap"],[6,"ByteWriter"],[6,"StringWriter"],[6,"Encoder"],[6,"Decoder"],[6,"Encoding"],[1,"Vec"],[1,"String"],[1,"ErrorEncoding"],[1,"ErrorEncoder"],[1,"ErrorDecoder"],[1,"ASCIIEncoding"],[1,"ASCIIEncoder"],[1,"ASCIIDecoder"],[1,"SingleByteEncoding"],[1,"SingleByteEncoder"],[1,"SingleByteDecoder"],[1,"UTF8Encoding"],[1,"UTF8Encoder"],[1,"UTF8Decoder"],[6,"Endian"],[1,"Little"],[1,"Big"],[1,"UTF16Encoding"],[1,"UTF16Encoder"],[1,"UTF16Decoder"],[1,"Windows949Encoding"],[1,"Windows949Encoder"],[1,"Windows949Decoder"],[1,"EUCJPEncoding"],[1,"EUCJPEncoder"],[1,"EUCJP0212Decoder"],[1,"Windows31JEncoding"],[1,"Windows31JEncoder"],[1,"Windows31JDecoder"],[1,"ISO2022JPEncoding"],[1,"ISO2022JPEncoder"],[1,"ISO2022JPDecoder"],[1,"GB18030Encoding"],[1,"GB18030Encoder"],[1,"GB18030Decoder"],[1,"HZEncoding"],[1,"HZEncoder"],[1,"HZDecoder"],[1,"BigFive2003Encoding"],[1,"BigFive2003Encoder"],[1,"BigFive2003HKSCS2008Decoder"],[1,"EncoderOnlyUTF8Encoding"]]};

searchIndex['libgit2'] = {"items":[[0,"","libgit2",""],[1,"git_revspec","",""],[11,"from","","",0],[11,"to","","",0],[11,"flags","","",0],[1,"git_error","",""],[11,"message","","",1],[11,"klass","","",1],[1,"git_oid","",""],[11,"id","","",2],[1,"git_strarray","",""],[11,"strings","","",3],[11,"count","","",3],[1,"git_signature","",""],[11,"name","","",4],[11,"email","","",4],[11,"when","","",4],[1,"git_time","",""],[11,"time","","",5],[11,"offset","","",5],[1,"git_revparse_mode_t","",""],[1,"git_clone_options","",""],[11,"version","","",6],[11,"checkout_opts","","",6],[11,"remote_callbacks","","",6],[11,"bare","","",6],[11,"local","","",6],[11,"checkout_branch","","",6],[11,"signature","","",6],[11,"repository_cb","","",6],[11,"repository_cb_payload","","",6],[11,"remote_cb","","",6],[11,"remote_cb_payload","","",6],[1,"git_checkout_options","",""],[11,"version","","",7],[11,"checkout_strategy","","",7],[11,"disable_filters","","",7],[11,"dir_mode","","",7],[11,"file_mode","","",7],[11,"file_open_flags","","",7],[11,"notify_flags","","",7],[11,"notify_cb","","",7],[11,"notify_payload","","",7],[11,"progress_cb","","",7],[11,"progress_payload","","",7],[11,"paths","","",7],[11,"baseline","","",7],[11,"target_directory","","",7],[11,"ancestor_label","","",7],[11,"our_label","","",7],[11,"their_label","","",7],[1,"git_remote_callbacks","",""],[11,"version","","",8],[11,"sideband_progress","","",8],[11,"completion","","",8],[11,"credentials","","",8],[11,"transfer_progress","","",8],[11,"update_tips","","",8],[11,"payload","","",8],[1,"git_transfer_progress","",""],[11,"total_objects","","",9],[11,"indexed_objects","","",9],[11,"received_objects","","",9],[11,"local_objects","","",9],[11,"total_deltas","","",9],[11,"indexed_deltas","","",9],[11,"received_bytes","","",9],[1,"git_diff_file","",""],[11,"id","","",10],[11,"path","","",10],[11,"size","","",10],[11,"flags","","",10],[11,"mode","","",10],[1,"git_buf","",""],[11,"ptr","","",11],[11,"asize","","",11],[11,"size","","",11],[1,"git_index_entry","",""],[11,"ctime","","",12],[11,"mtime","","",12],[11,"dev","","",12],[11,"ino","","",12],[11,"mode","","",12],[11,"uid","","",12],[11,"gid","","",12],[11,"file_size","","",12],[11,"id","","",12],[11,"flags","","",12],[11,"flags_extended","","",12],[11,"path","","",12],[1,"git_index_time","",""],[11,"seconds","","",13],[11,"nanoseconds","","",13],[1,"git_config_entry","",""],[11,"name","","",14],[11,"value","","",14],[11,"level","","",14],[1,"git_cred","",""],[11,"credtype","","",15],[11,"free","","",15],[1,"git_push_options","",""],[11,"version","","",16],[11,"pb_parallelism","","",16],[1,"git_repository_init_options","",""],[11,"version","","",17],[11,"flags","","",17],[11,"mode","","",17],[11,"workdir_path","","",17],[11,"description","","",17],[11,"template_path","","",17],[11,"initial_head","","",17],[11,"origin_url","","",17],[2,"git_blob","",""],[2,"git_branch_iterator","",""],[2,"git_commit","",""],[2,"git_config","",""],[2,"git_config_iterator","",""],[2,"git_index","",""],[2,"git_object","",""],[2,"git_reference","",""],[2,"git_reference_iterator","",""],[2,"git_refspec","",""],[2,"git_remote","",""],[2,"git_repository","",""],[2,"git_submodule","",""],[2,"git_tag","",""],[2,"git_tree","",""],[2,"git_tree_entry","",""],[2,"git_push","",""],[2,"git_error_code","",""],[12,"GIT_OK","","",18],[12,"GIT_ERROR","","",18],[12,"GIT_ENOTFOUND","","",18],[12,"GIT_EEXISTS","","",18],[12,"GIT_EAMBIGUOUS","","",18],[12,"GIT_EBUFS","","",18],[12,"GIT_EUSER","","",18],[12,"GIT_EBAREREPO","","",18],[12,"GIT_EUNBORNBRANCH","","",18],[12,"GIT_EUNMERGED","","",18],[12,"GIT_ENONFASTFORWARD","","",18],[12,"GIT_EINVALIDSPEC","","",18],[12,"GIT_EMERGECONFLICT","","",18],[12,"GIT_ELOCKED","","",18],[12,"GIT_EMODIFIED","","",18],[12,"GIT_PASSTHROUGH","","",18],[12,"GIT_ITEROVER","","",18],[2,"git_repository_state_t","",""],[12,"GIT_REPOSITORY_STATE_NONE","","",19],[12,"GIT_REPOSITORY_STATE_MERGE","","",19],[12,"GIT_REPOSITORY_STATE_REVERT","","",19],[12,"GIT_REPOSITORY_STATE_CHERRYPICK","","",19],[12,"GIT_REPOSITORY_STATE_BISECT","","",19],[12,"GIT_REPOSITORY_STATE_REBASE","","",19],[12,"GIT_REPOSITORY_STATE_REBASE_INTERACTIVE","","",19],[12,"GIT_REPOSITORY_STATE_REBASE_MERGE","","",19],[12,"GIT_REPOSITORY_STATE_APPLY_MAILBOX","","",19],[12,"GIT_REPOSITORY_STATE_APPLY_MAILBOX_OR_REBASE","","",19],[2,"git_direction","",""],[12,"GIT_DIRECTION_FETCH","","",20],[12,"GIT_DIRECTION_PUSH","","",20],[2,"git_clone_local_t","",""],[12,"GIT_CLONE_LOCAL_AUTO","","",21],[12,"GIT_CLONE_LOCAL","","",21],[12,"GIT_CLONE_NO_LOCAL","","",21],[12,"GIT_CLONE_LOCAL_NO_LINKS","","",21],[2,"git_remote_completion_type","",""],[12,"GIT_REMOTE_COMPLETION_DOWNLOAD","","",22],[12,"GIT_REMOTE_COMPLETION_INDEXING","","",22],[12,"GIT_REMOTE_COMPLETION_ERROR","","",22],[2,"git_checkout_notify_t","",""],[12,"GIT_CHECKOUT_NOTIFY_NONE","","",23],[12,"GIT_CHECKOUT_NOTIFY_CONFLICT","","",23],[12,"GIT_CHECKOUT_NOTIFY_DIRTY","","",23],[12,"GIT_CHECKOUT_NOTIFY_UPDATED","","",23],[12,"GIT_CHECKOUT_NOTIFY_UNTRACKED","","",23],[12,"GIT_CHECKOUT_NOTIFY_IGNORED","","",23],[12,"GIT_CHECKOUT_NOTIFY_ALL","","",23],[2,"git_checkout_strategy_t","",""],[12,"GIT_CHECKOUT_NONE","","",24],[12,"GIT_CHECKOUT_SAFE","","",24],[12,"GIT_CHECKOUT_SAFE_CREATE","","",24],[12,"GIT_CHECKOUT_FORCE","","",24],[12,"GIT_CHECKOUT_ALLOW_CONFLICTS","","",24],[12,"GIT_CHECKOUT_REMOVE_UNTRACKED","","",24],[12,"GIT_CHECKOUT_REMOVE_IGNORED","","",24],[12,"GIT_CHECKOUT_UPDATE_ONLY","","",24],[12,"GIT_CHECKOUT_DONT_UPDATE_INDEX","","",24],[12,"GIT_CHECKOUT_NO_REFRESH","","",24],[12,"GIT_CHECKOUT_SKIP_UNMERGED","","",24],[12,"GIT_CHECKOUT_USE_OURS","","",24],[12,"GIT_CHECKOUT_USE_THEIRS","","",24],[12,"GIT_CHECKOUT_DISABLE_PATHSPEC_MATCH","","",24],[12,"GIT_CHECKOUT_SKIP_LOCKED_DIRECTORIES","","",24],[12,"GIT_CHECKOUT_DONT_OVERWRITE_IGNORED","","",24],[12,"GIT_CHECKOUT_CONFLICT_STYLE_MERGE","","",24],[12,"GIT_CHECKOUT_CONFLICT_STYLE_DIFF3","","",24],[12,"GIT_CHECKOUT_UPDATE_SUBMODULES","","",24],[12,"GIT_CHECKOUT_UPDATE_SUBMODULES_IF_CHANGED","","",24],[2,"git_reset_t","",""],[12,"GIT_RESET_SOFT","","",25],[12,"GIT_RESET_MIXED","","",25],[12,"GIT_RESET_HARD","","",25],[2,"git_otype","",""],[12,"GIT_OBJ_ANY","","",26],[12,"GIT_OBJ_BAD","","",26],[12,"GIT_OBJ__EXT1","","",26],[12,"GIT_OBJ_COMMIT","","",26],[12,"GIT_OBJ_TREE","","",26],[12,"GIT_OBJ_BLOB","","",26],[12,"GIT_OBJ_TAG","","",26],[12,"GIT_OBJ__EXT2","","",26],[12,"GIT_OBJ_OFS_DELTA","","",26],[12,"GIT_OBJ_REF_DELTA","","",26],[2,"git_ref_t","",""],[12,"GIT_REF_INVALID","","",27],[12,"GIT_REF_OID","","",27],[12,"GIT_REF_SYMBOLIC","","",27],[12,"GIT_REF_LISTALL","","",27],[2,"git_filemode_t","",""],[12,"GIT_FILEMODE_UNREADABLE","","",28],[12,"GIT_FILEMODE_TREE","","",28],[12,"GIT_FILEMODE_BLOB","","",28],[12,"GIT_FILEMODE_BLOB_EXECUTABLE","","",28],[12,"GIT_FILEMODE_LINK","","",28],[12,"GIT_FILEMODE_COMMIT","","",28],[2,"git_treewalk_mode","",""],[12,"GIT_TREEWALK_PRE","","",29],[12,"GIT_TREEWALK_POST","","",29],[2,"git_branch_t","",""],[12,"GIT_BRANCH_LOCAL","","",30],[12,"GIT_BRANCH_REMOTE","","",30],[12,"GIT_BRANCH_ALL","","",30],[2,"git_config_level_t","",""],[12,"GIT_CONFIG_LEVEL_SYSTEM","","",31],[12,"GIT_CONFIG_LEVEL_XDG","","",31],[12,"GIT_CONFIG_LEVEL_GLOBAL","","",31],[12,"GIT_CONFIG_LEVEL_LOCAL","","",31],[12,"GIT_CONFIG_LEVEL_APP","","",31],[12,"GIT_CONFIG_HIGHEST_LEVEL","","",31],[2,"git_submodule_update_t","",""],[12,"GIT_SUBMODULE_UPDATE_RESET","","",32],[12,"GIT_SUBMODULE_UPDATE_CHECKOUT","","",32],[12,"GIT_SUBMODULE_UPDATE_REBASE","","",32],[12,"GIT_SUBMODULE_UPDATE_MERGE","","",32],[12,"GIT_SUBMODULE_UPDATE_NONE","","",32],[12,"GIT_SUBMODULE_UPDATE_DEFAULT","","",32],[2,"git_submodule_ignore_t","",""],[12,"GIT_SUBMODULE_IGNORE_RESET","","",33],[12,"GIT_SUBMODULE_IGNORE_NONE","","",33],[12,"GIT_SUBMODULE_IGNORE_UNTRACKED","","",33],[12,"GIT_SUBMODULE_IGNORE_DIRTY","","",33],[12,"GIT_SUBMODULE_IGNORE_ALL","","",33],[12,"GIT_SUBMODULE_IGNORE_DEFAULT","","",33],[2,"git_credtype_t","",""],[12,"GIT_CREDTYPE_USERPASS_PLAINTEXT","","",34],[12,"GIT_CREDTYPE_SSH_KEY","","",34],[12,"GIT_CREDTYPE_SSH_CUSTOM","","",34],[12,"GIT_CREDTYPE_DEFAULT","","",34],[12,"GIT_CREDTYPE_SSH_INTERACTIVE","","",34],[2,"LIBSSH2_SESSION","",""],[2,"LIBSSH2_USERAUTH_KBDINT_PROMPT","",""],[2,"LIBSSH2_USERAUTH_KBDINT_RESPONSE","",""],[2,"git_index_add_option_t","",""],[12,"GIT_INDEX_ADD_DEFAULT","","",35],[12,"GIT_INDEX_ADD_FORCE","","",35],[12,"GIT_INDEX_ADD_DISABLE_PATHSPEC_MATCH","","",35],[12,"GIT_INDEX_ADD_CHECK_PATHSPEC","","",35],[2,"git_repository_init_flag_t","",""],[12,"GIT_REPOSITORY_INIT_BARE","","",36],[12,"GIT_REPOSITORY_INIT_NO_REINIT","","",36],[12,"GIT_REPOSITORY_INIT_NO_DOTGIT_DIR","","",36],[12,"GIT_REPOSITORY_INIT_MKDIR","","",36],[12,"GIT_REPOSITORY_INIT_MKPATH","","",36],[12,"GIT_REPOSITORY_INIT_EXTERNAL_TEMPLATE","","",36],[2,"git_repository_init_mode_t","",""],[12,"GIT_REPOSITORY_INIT_SHARED_UMASK","","",37],[12,"GIT_REPOSITORY_INIT_SHARED_GROUP","","",37],[12,"GIT_REPOSITORY_INIT_SHARED_ALL","","",37],[3,"openssl_init","","Initialize openssl for the libgit2 library"],[13,"git_threads_init","",""],[13,"git_threads_shutdown","",""],[13,"git_repository_free","",""],[13,"git_repository_open","",""],[13,"git_repository_init","",""],[13,"git_repository_init_ext","",""],[13,"git_repository_init_init_options","",""],[13,"git_repository_get_namespace","",""],[13,"git_repository_head","",""],[13,"git_repository_is_bare","",""],[13,"git_repository_is_empty","",""],[13,"git_repository_is_shallow","",""],[13,"git_repository_path","",""],[13,"git_repository_state","",""],[13,"git_repository_workdir","",""],[13,"git_repository_index","",""],[13,"git_repository_config","",""],[13,"git_repository_config_snapshot","",""],[13,"git_revparse","",""],[13,"git_revparse_single","",""],[13,"git_object_dup","",""],[13,"git_object_id","",""],[13,"git_object_free","",""],[13,"git_object_lookup","",""],[13,"git_object_type","",""],[13,"git_object_peel","",""],[13,"git_object_short_id","",""],[13,"git_object_type2string","",""],[13,"git_object_string2type","",""],[13,"git_object_typeisloose","",""],[13,"git_oid_fromraw","",""],[13,"git_oid_fromstrn","",""],[13,"git_oid_tostr","",""],[13,"git_oid_cmp","",""],[13,"git_oid_equal","",""],[13,"git_oid_streq","",""],[13,"giterr_last","",""],[13,"giterr_clear","",""],[13,"giterr_detach","",""],[13,"git_remote_create","",""],[13,"git_remote_load","",""],[13,"git_remote_create_anonymous","",""],[13,"git_remote_delete","",""],[13,"git_remote_free","",""],[13,"git_remote_name","",""],[13,"git_remote_pushurl","",""],[13,"git_remote_refspec_count","",""],[13,"git_remote_url","",""],[13,"git_remote_connect","",""],[13,"git_remote_connected","",""],[13,"git_remote_disconnect","",""],[13,"git_remote_save","",""],[13,"git_remote_add_fetch","",""],[13,"git_remote_add_push","",""],[13,"git_remote_check_cert","",""],[13,"git_remote_clear_refspecs","",""],[13,"git_remote_download","",""],[13,"git_remote_dup","",""],[13,"git_remote_get_fetch_refspecs","",""],[13,"git_remote_get_refspec","",""],[13,"git_remote_is_valid_name","",""],[13,"git_remote_valid_url","",""],[13,"git_remote_supported_url","",""],[13,"git_remote_list","",""],[13,"git_remote_rename","",""],[13,"git_remote_fetch","",""],[13,"git_remote_update_tips","",""],[13,"git_remote_update_fetchhead","",""],[13,"git_remote_set_url","",""],[13,"git_remote_set_pushurl","",""],[13,"git_remote_set_update_fetchhead","",""],[13,"git_remote_set_fetch_refspecs","",""],[13,"git_remote_set_push_refspecs","",""],[13,"git_remote_set_callbacks","",""],[13,"git_remote_init_callbacks","",""],[13,"git_refspec_direction","",""],[13,"git_refspec_dst","",""],[13,"git_refspec_dst_matches","",""],[13,"git_refspec_src","",""],[13,"git_refspec_src_matches","",""],[13,"git_refspec_force","",""],[13,"git_refspec_string","",""],[13,"git_strarray_free","",""],[13,"git_signature_default","",""],[13,"git_signature_free","",""],[13,"git_signature_new","",""],[13,"git_signature_now","",""],[13,"git_signature_dup","",""],[13,"git_clone","",""],[13,"git_clone_init_options","",""],[13,"git_reset","",""],[13,"git_reset_default","",""],[13,"git_reference_cmp","",""],[13,"git_reference_delete","",""],[13,"git_reference_free","",""],[13,"git_reference_is_branch","",""],[13,"git_reference_is_note","",""],[13,"git_reference_is_remote","",""],[13,"git_reference_is_tag","",""],[13,"git_reference_is_valid_name","",""],[13,"git_reference_lookup","",""],[13,"git_reference_name","",""],[13,"git_reference_name_to_id","",""],[13,"git_reference_rename","",""],[13,"git_reference_resolve","",""],[13,"git_reference_shorthand","",""],[13,"git_reference_symbolic_target","",""],[13,"git_reference_target","",""],[13,"git_reference_target_peel","",""],[13,"git_reference_type","",""],[13,"git_reference_iterator_new","",""],[13,"git_reference_iterator_glob_new","",""],[13,"git_reference_iterator_free","",""],[13,"git_reference_next","",""],[13,"git_reference_next_name","",""],[13,"git_reference_create","",""],[13,"git_reference_symbolic_create","",""],[13,"git_submodule_add_finalize","",""],[13,"git_submodule_add_setup","",""],[13,"git_submodule_add_to_index","",""],[13,"git_submodule_branch","",""],[13,"git_submodule_foreach","",""],[13,"git_submodule_free","",""],[13,"git_submodule_head_id","",""],[13,"git_submodule_index_id","",""],[13,"git_submodule_init","",""],[13,"git_submodule_location","",""],[13,"git_submodule_lookup","",""],[13,"git_submodule_name","",""],[13,"git_submodule_open","",""],[13,"git_submodule_path","",""],[13,"git_submodule_reload","",""],[13,"git_submodule_reload_all","",""],[13,"git_submodule_save","",""],[13,"git_submodule_set_ignore","",""],[13,"git_submodule_set_update","",""],[13,"git_submodule_set_url","",""],[13,"git_submodule_sync","",""],[13,"git_submodule_update","",""],[13,"git_submodule_url","",""],[13,"git_submodule_wd_id","",""],[13,"git_blob_free","",""],[13,"git_blob_id","",""],[13,"git_blob_is_binary","",""],[13,"git_blob_lookup","",""],[13,"git_blob_lookup_prefix","",""],[13,"git_blob_rawcontent","",""],[13,"git_blob_rawsize","",""],[13,"git_blob_create_frombuffer","",""],[13,"git_blob_create_fromdisk","",""],[13,"git_blob_create_fromworkdir","",""],[13,"git_tree_entry_byid","",""],[13,"git_tree_entry_byindex","",""],[13,"git_tree_entry_byname","",""],[13,"git_tree_entry_bypath","",""],[13,"git_tree_entry_cmp","",""],[13,"git_tree_entry_dup","",""],[13,"git_tree_entry_filemode","",""],[13,"git_tree_entry_filemode_raw","",""],[13,"git_tree_entry_free","",""],[13,"git_tree_entry_id","",""],[13,"git_tree_entry_name","",""],[13,"git_tree_entry_to_object","",""],[13,"git_tree_entry_type","",""],[13,"git_tree_entrycount","",""],[13,"git_tree_free","",""],[13,"git_tree_id","",""],[13,"git_tree_lookup","",""],[13,"git_tree_walk","",""],[13,"git_buf_free","",""],[13,"git_buf_grow","",""],[13,"git_buf_set","",""],[13,"git_commit_author","",""],[13,"git_commit_committer","",""],[13,"git_commit_free","",""],[13,"git_commit_id","",""],[13,"git_commit_lookup","",""],[13,"git_commit_message","",""],[13,"git_commit_message_encoding","",""],[13,"git_commit_message_raw","",""],[13,"git_commit_nth_gen_ancestor","",""],[13,"git_commit_parent","",""],[13,"git_commit_parent_id","",""],[13,"git_commit_parentcount","",""],[13,"git_commit_raw_header","",""],[13,"git_commit_summary","",""],[13,"git_commit_time","",""],[13,"git_commit_time_offset","",""],[13,"git_commit_tree","",""],[13,"git_commit_tree_id","",""],[13,"git_commit_amend","",""],[13,"git_commit_create","",""],[13,"git_branch_create","",""],[13,"git_branch_delete","",""],[13,"git_branch_is_head","",""],[13,"git_branch_iterator_free","",""],[13,"git_branch_iterator_new","",""],[13,"git_branch_lookup","",""],[13,"git_branch_move","",""],[13,"git_branch_name","",""],[13,"git_branch_next","",""],[13,"git_branch_set_upstream","",""],[13,"git_branch_upstream","",""],[13,"git_index_add","",""],[13,"git_index_add_all","",""],[13,"git_index_add_bypath","",""],[13,"git_index_clear","",""],[13,"git_index_entry_stage","",""],[13,"git_index_entrycount","",""],[13,"git_index_find","",""],[13,"git_index_free","",""],[13,"git_index_get_byindex","",""],[13,"git_index_get_bypath","",""],[13,"git_index_new","",""],[13,"git_index_open","",""],[13,"git_index_path","",""],[13,"git_index_read","",""],[13,"git_index_read_tree","",""],[13,"git_index_remove","",""],[13,"git_index_remove_all","",""],[13,"git_index_remove_bypath","",""],[13,"git_index_remove_directory","",""],[13,"git_index_update_all","",""],[13,"git_index_write","",""],[13,"git_index_write_tree","",""],[13,"git_index_write_tree_to","",""],[13,"git_config_add_file_ondisk","",""],[13,"git_config_delete_entry","",""],[13,"git_config_delete_multivar","",""],[13,"git_config_find_global","",""],[13,"git_config_find_system","",""],[13,"git_config_find_xdg","",""],[13,"git_config_free","",""],[13,"git_config_get_bool","",""],[13,"git_config_get_entry","",""],[13,"git_config_get_int32","",""],[13,"git_config_get_int64","",""],[13,"git_config_get_string","",""],[13,"git_config_iterator_free","",""],[13,"git_config_iterator_glob_new","",""],[13,"git_config_iterator_new","",""],[13,"git_config_new","",""],[13,"git_config_next","",""],[13,"git_config_open_default","",""],[13,"git_config_open_global","",""],[13,"git_config_open_level","",""],[13,"git_config_open_ondisk","",""],[13,"git_config_parse_bool","",""],[13,"git_config_parse_int32","",""],[13,"git_config_parse_int64","",""],[13,"git_config_refresh","",""],[13,"git_config_set_bool","",""],[13,"git_config_set_int32","",""],[13,"git_config_set_int64","",""],[13,"git_config_set_string","",""],[13,"git_config_snapshot","",""],[13,"git_cred_default_new","",""],[13,"git_cred_has_username","",""],[13,"git_cred_ssh_custom_new","",""],[13,"git_cred_ssh_interactive_new","",""],[13,"git_cred_ssh_key_from_agent","",""],[13,"git_cred_ssh_key_new","",""],[13,"git_cred_userpass","",""],[13,"git_cred_userpass_plaintext_new","",""],[13,"git_push_add_refspec","",""],[13,"git_push_finish","",""],[13,"git_push_free","",""],[13,"git_push_init_options","",""],[13,"git_push_new","",""],[13,"git_push_set_options","",""],[13,"git_push_unpack_ok","",""],[13,"git_push_update_tips","",""],[13,"git_push_status_foreach","",""],[13,"git_tag_annotation_create","",""],[13,"git_tag_create","",""],[13,"git_tag_create_frombuffer","",""],[13,"git_tag_create_lightweight","",""],[13,"git_tag_delete","",""],[13,"git_tag_foreach","",""],[13,"git_tag_free","",""],[13,"git_tag_id","",""],[13,"git_tag_list","",""],[13,"git_tag_list_match","",""],[13,"git_tag_lookup","",""],[13,"git_tag_lookup_prefix","",""],[13,"git_tag_message","",""],[13,"git_tag_name","",""],[13,"git_tag_peel","",""],[13,"git_tag_tagger","",""],[13,"git_tag_target","",""],[13,"git_tag_target_id","",""],[13,"git_tag_target_type","",""],[13,"git_checkout_head","",""],[13,"git_checkout_index","",""],[13,"git_checkout_tree","",""],[13,"git_checkout_init_options","",""],[4,"git_off_t","",""],[4,"git_time_t","",""],[4,"git_checkout_notify_cb","",""],[4,"git_checkout_progress_cb","",""],[4,"git_transport_message_cb","",""],[4,"git_cred_acquire_cb","",""],[4,"git_transfer_progress_cb","",""],[4,"git_repository_create_cb","",""],[4,"git_remote_create_cb","",""],[4,"git_treewalk_cb","",""],[4,"git_index_matched_path_cb","",""],[4,"git_cred_ssh_interactive_callback","",""],[4,"git_cred_sign_callback","",""],[4,"git_tag_foreach_cb","",""],[18,"GIT_OID_RAWSZ","",""],[18,"GIT_OID_HEXSZ","",""],[18,"GIT_CLONE_OPTIONS_VERSION","",""],[18,"GIT_CHECKOUT_OPTIONS_VERSION","",""],[18,"GIT_REMOTE_CALLBACKS_VERSION","",""],[18,"GIT_REVPARSE_SINGLE","",""],[18,"GIT_REVPARSE_RANGE","",""],[18,"GIT_REVPARSE_MERGE_BASE","",""],[18,"GIT_REPOSITORY_INIT_OPTIONS_VERSION","",""],[10,"hash","","",38],[10,"cmp","","",38],[10,"partial_cmp","","",38],[10,"lt","","",38],[10,"le","","",38],[10,"gt","","",38],[10,"ge","","",38],[10,"clone","","",38],[10,"eq","","",38],[10,"ne","","",38],[10,"empty","","Returns an empty set of flags.",38],[10,"all","","Returns the set containing all flags.",38],[10,"bits","","Returns the raw value of the flags currently stored.",38],[10,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",38],[10,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",38],[10,"is_empty","","Returns `true` if no flags are currently stored.",38],[10,"is_all","","Returns `true` if all flags are currently set.",38],[10,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",38],[10,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",38],[10,"insert","","Inserts the specified flags in-place.",38],[10,"remove","","Removes the specified flags in-place.",38],[10,"toggle","","Toggles the specified flags in-place.",38],[10,"bitor","","Returns the union of the two sets of flags.",38],[10,"bitxor","","Returns the left flags, but with all the right flags toggled.",38],[10,"bitand","","Returns the intersection between the two sets of flags.",38],[10,"sub","","Returns the set difference of the two sets of flags.",38],[10,"not","","Returns the complement of this set of flags.",38],[10,"fmt","","",18],[10,"clone","","",18],[10,"eq","","",18],[10,"ne","","",18]],"paths":[[1,"git_revspec"],[1,"git_error"],[1,"git_oid"],[1,"git_strarray"],[1,"git_signature"],[1,"git_time"],[1,"git_clone_options"],[1,"git_checkout_options"],[1,"git_remote_callbacks"],[1,"git_transfer_progress"],[1,"git_diff_file"],[1,"git_buf"],[1,"git_index_entry"],[1,"git_index_time"],[1,"git_config_entry"],[1,"git_cred"],[1,"git_push_options"],[1,"git_repository_init_options"],[2,"git_error_code"],[2,"git_repository_state_t"],[2,"git_direction"],[2,"git_clone_local_t"],[2,"git_remote_completion_type"],[2,"git_checkout_notify_t"],[2,"git_checkout_strategy_t"],[2,"git_reset_t"],[2,"git_otype"],[2,"git_ref_t"],[2,"git_filemode_t"],[2,"git_treewalk_mode"],[2,"git_branch_t"],[2,"git_config_level_t"],[2,"git_submodule_update_t"],[2,"git_submodule_ignore_t"],[2,"git_credtype_t"],[2,"git_index_add_option_t"],[2,"git_repository_init_flag_t"],[2,"git_repository_init_mode_t"],[1,"git_revparse_mode_t"]]};

searchIndex['link-config'] = {"items":[[0,"","link-config",""],[3,"plugin_registrar","",""]],"paths":[]};

searchIndex['openssl-static-sys'] = {"items":[[0,"","openssl-static-sys",""],[3,"find_certs_dirs","","Probe the system for the directory in which CA certificates should likely be\nfound."],[3,"init_ssl_cert_env_vars","",""]],"paths":[]};

searchIndex['libssh2-static-sys'] = {"items":[],"paths":[]};

initSearch(searchIndex);
